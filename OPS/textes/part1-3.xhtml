<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops" xml:lang="fr" lang="fr">
  <head>
    <title> Esquisse d’une archéologie de l’informatique communicante</title>
    <link rel="stylesheet" href="../styles/stylesheet.css" type="text/css" />
  </head>
  <body epub:type="bodymatter chapter">
    <h2 id="part1-3" class="titre-chapitre">
      3. Esquisse d’une archéologie de l’informatique communicante
    </h2>
    <p class="signature">Pascal <span class="auteur">Robert</span></p>

    <nav id="TOC" epub:type="bodymatter toc" class="epub-toc">
      <ol>
        <li><a href="#part1-3.1">3.1 L’augmentation et le <i lang="en" xml:lang="en">bootstrapping</i></a>
          <ol>
            <li><a href="#part1-3.1.1">3.1.1 L’augmentation : le projet</a></li>
            <li><a href="#part1-3.1.2">3.1.2 Le <i lang="en" xml:lang="en">bootstrapping</i> : le processus et l’outil</a></li>
            <li><a href="#part1-3.1.3">3.1.3 Torsion : A. Kay, la convivialité comme <i lang="la" xml:lang="la">a priori</i></a></li>
          </ol>
        </li>
        <li><a href="#part1-3.2">3.2 La modélisation, la résolution de problèmes et le réseau</a>
          <ol class="toc">
            <li><a href="#part1-3.2.1">3.2.1 <i lang="en" xml:lang="en">On line man-computer communication</i></a></li>
            <li><a href="#part1-3.2.2">3.2.2 Le <i lang="en" xml:lang="en">procognitive system</i></a></li>
            <li><a href="#part1-3.2.3">3.2.3 La fin des années 1960</a></li>
          </ol>
        </li>
        <li><a href="#part1-3.3">3.3 Conclusion</a></li>
      </ol>
    </nav>

    <p> Il est peut-être temps de tenter une « archéologie du savoir » informatique – et singulièrement de l’informatique communicante. Il y manquera, bien évidemment, le génie de Michel Foucault. Un Foucault qu’il n’est pas possible d’appliquer, mais dont il est néanmoins possible de s’inspirer – et de s’inspirer seulement <a epub:type="noteref" href="#note_1" id="ref_1"> <sup>[1]</sup></a>. Cette archéologie ne doit pas forcément, du moins dans un premier temps, concerner le savoir technique de l’informatique ou l’informatique comme savoir technique. Elle doit d’abord, me semble-t-il, appréhender le socle des discours visionnaires sur lesquels s’est construite l’informatique communicante (à la fois conviviale et réseautique). Socle étrange, puisqu’il s’est révélé suffisamment solide pour que, sur cette base, s’élève l’essentiel de l’informatique graphique et de réseau. Socle également fragile, parce que, discursif et expérimental, il pouvait facilement s’effriter, voire se déliter et, si tel n’a pas été le cas, il faut reconnaître qu’il a subi des torsions, voire des trahisons – éventuellement productives, cela dit. Socle qui, enfin, a produit un effet d’<em>ouverture </em>sur une autre manière de concevoir l’informatique comme dispositif, au-delà des grands systèmes propriétaires, entre micro-informatique et réseaux. Un principe d’ouverture dont a profité la logique du logiciel libre. </p>
    <p> Or, le noyau dur de ce socle s’articule avec les travaux de Douglas Engelbart et Joseph Carl Robnett <i lang="en" xml:lang="en" class="droit">Licklider</i>. Leurs visions, entre les années 1960 et les années 1970, vont être travaillées par une tension forte entre la logique de l’<em>apprentissage </em>et celle de la <em>convivialité </em>chez Engelbart et celles de la <em>modiélisation </em>et de la <em>communication </em>chez <i lang="en" xml:lang="en" class="droit">Licklider</i>. Ce sont les <em>quatre piliers </em>de notre informatique graphique et communicante. Son histoire est celle de leurs tensions, c’est aussi, quelque part, celle du Libre : on aurait pu imaginer une informatique qui promeuve largement l’apprentissage et la modélisation, ce à quoi s’attache plus volontiers le Libre, mais la micro-informatique et les réseaux ont préféré massivement survaloriser la convivialité et la communication ; les figures de l’avenir vont, peut être, se tracer entre apprentissage et communication et/ou convivialité et modélisation, à moins que l’on ne revienne aux positions d’Engelbart et de <i lang="en" xml:lang="en" class="droit">Licklider</i>… Quoi qu’il en soit, il nous faut passer <em>sous </em>cette histoire, ce en quoi consiste toute archéologie, afin de mieux comprendre, d’une part, les conditions d’émergence discursives et pratiques de ces quatre piliers et, d’autre part, le basculement en faveur de la convivialité et de la communication. </p>

    <section epub:type="bodymatter subchapter">
      <h3 id="part1-3.1">3.1 L’augmentation et le <i lang="en" xml:lang="en">bootstrapping</i></h3>
      <p> L’apprentissage chez D. Engelbart renvoie à ce qu’il appelle le «<i lang="en" xml:lang="en"> boostrapping</i> », un mécanisme de production réciproque entre l’homme et le dispositif technique. « L’augmentation » des capacités intellectuelles que recherche D. Engelbart passe par la création – et le détour donc – d’un dispositif technique complexe (<i lang="en" xml:lang="en" class="droit">On Line System, <abbr>NLS</abbr></i>) qui exige un effort d’apprentissage <a epub:type="noteref" href="#note_2" id="ref_2"> <sup>[2]</sup></a>. À travers cet effort, l’homme apprend (à développer le système et à utiliser le système) et par là même se transforme. Et cet homme transformé va à son tour modifier le système, etc. S’il y a de la convivialité parfois là-dedans, elle est au service de ce mécanisme, elle n’est jamais autonome et ne constitue pas un objectif. C’est avec les travaux d’A. Kay notamment au PARC (Palo Alto research center) de Xerox dans les années 1970 que le « <i lang="en" xml:lang="en">user friendly</i> » va s’imposer comme un but. Ce que D. Engelbart vivra comme une sorte de trahison. </p>

      <h4 id="part1-3.1.1">3.1.1 L’augmentation : le projet</h4>
      <p> Aujourd’hui le terme « augmentation » renvoie de manière privilégiée à une des modalités de conception et de manifestation des mondes virtuels 3D : il s’agit d’ajouter une couche de virtuel à la réalité qui, ainsi, s’en trouve justement augmentée. Mais le terme d’augmentation a d’abord été utilisé par Douglas Engelbart dans ses travaux des années 1960 pour désigner une réponse possible, une réponse technique en l’occurrence (et non organisationnelle par exemple), au défi de la gestion de la complexité. </p>

      <h5>Le défi de la complexité</h5>
      <p> La vision de Douglas Engelbart s’articule à une forte sensibilité avec la question de la montée en puissance de la complexité lors des années 1950 et 1960. Ainsi, Douglas Engelbart, dans un exercice d’histoire orale rétrospective en vient à souligner que : </p>
      <blockquote lang="en" xml:lang="en">
        <p> I remembered reading about the people that would go in and lick malaria in an area, and then the population would grow so fast and the people didn’t take care of the ecology, and so pretty soon they were starving again, because they not only couldn’t feed themselves, but the soil was eroding so fast that the productivity of the land was going to go down. So it’s a case that the side effects didn’t produce what you thought the direct benefits would. I began to realize it’s a very complex world. If you can pick a target that if you succeed will indeed produce the benefit you wanted, or it might also have negative side effects that are going to counteract the benefit. <a epub:type="noteref" href="#note_3" id="ref_3"> <sup>[3]</sup></a></p>
      </blockquote>
      <p> La complexité, mal maîtrisée, entraîne des effets pervers, c’est-à-dire que même une intervention pleine de bonne volonté peut aboutir à un effet négatif qui compense et souvent dépasse l’effet bénéfique escompté <i lang="la" xml:lang="la">a priori</i>. Nous ne semblons pas suffisamment armés pour faire face à ces effets qui s’entrecroisent, s’enchevêtrent, se bouclent et se relancent. La réponse apportée à ce constat par Douglas Engelbart aurait pu n’être que théorique. Elle fut double, à la fois théorique, avec ce qu’il appellera le <i lang="en" xml:lang="en">bootstrapping</i>, et pratique, à travers l’invention d’un artefact technique. Or, ici la théorie n’est pas indépendante du dispositif lui-même, puisqu’elle est avant toute chose la théorisation de la manière de l’utiliser. Pourquoi une telle réponse ? </p>
      <p> La question de la complexité n’est pas la seule qui inquiète Douglas Engelbart, car précise-t-il : </p>
      <blockquote lang="en" xml:lang="en">
        <p> I began to realize the probability of your achieving your goal isn’t terribly high, and the probability if you do achieve it that it’s a success is low. So, you’d better start learning about that. Someplace along there, I just had this flash that, hey, what that really says is that the complexity of a lot of the problems and the means for solving them are just getting to be too much. The time available for solving a lot of the problems is getting shorter and shorter. So the urgency goes up. So then I put it together that the product of these two factors, complexity and urgency, are the measure for human organizations or institutions. The complexity/urgency factor had transcended what humans can cope with. It suddenly flashed that if you could do something to improve human capability to deal with that, then you’d really contribute something basic. <a epub:type="noteref" href="#note_4" id="ref_4"> <sup>[4]</sup></a> </p>
      </blockquote>
      <p> La question de l’urgence n’est autre que celle de la vitesse. En effet, plus la complexité croît et plus la réponse que les hommes peuvent lui apporter doit pouvoir être à la hauteur, parvenant à maîtriser un nombre toujours plus grand de facteurs eux-mêmes en variations, ce qui nécessite une puissance de traitement de l’information toujours plus grande et plus rapide. Il est clair à ses yeux que la seule intelligence de l’homme ne pourra pas répondre, seule, à ce défi. Autrement dit, notre monde devient à ce point complexe que notre culture doit se créer de nouveaux outils susceptibles de l’affronter. De nouvelles armes. </p>

      <h5>L’augmentation comme réponse : le détour</h5>
      <p> La complexité ne peut pas être appréhendée à l’aide de notre seul cerveau. Mais il ne s’agit pas pour autant de renier ce cerveau. Il ne s’agit pas de lui substituer un autre cerveau, artificiel, qui viendrait suppléer à ses carences. C’est pourquoi notre intelligence doit, non pas faire l’objet d’un reniement au bénéfice de la machine comme le prétend le programme de l’intelligence artificielle (<abbr>IA</abbr>), mais faire l’objet d’une « augmentation », c’est-à-dire d’une amplification de ses propriétés et aptitudes. Ce qui exige de mettre au point un dispositif – et la philosophie qui va avec – qui soit capable de travailler avec l’être humain dans une relation qui, nous le verrons, les implique mutuellement. </p>
      <p> L’augmentation constitue une réponse plutôt paradoxale à la question de la montée en puissance inexorable de la complexité des problèmes du monde. En effet, si la complexité est multipliée par l’urgence, alors la réponse exigée devrait elle-même relever de cette logique de l’urgence, autrement dit, être rapidement mise au point et diffusée. L’urgence même de la question devrait commander l’urgence même de la réponse. Or, l’augmentation correspond à un détour, à une réponse non pas directe, mais indirecte, une réponse qui, quelque part, prend le temps de sa construction. Car c’est cette prise en compte du temps et du processus même de sa construction comme devant faire partie intégrante de cette construction – et non comme un facteur externe à maîtriser comme une contrainte – qui fait toute l’originalité de la proposition de Douglas Engelbart. La réponse n’est pas donnée mais à élaborer, et cette réponse elle-même ne sera véritablement efficace que si l’on prend le temps d’apprendre à mettre au point un dispositif technique lui-même complexe, en ce sens qu’il n’est pas forcément simple d’accès ni de s’en servir, pour l’améliorer afin qu’il puisse affronter une complexité croissante. Autrement dit, semble-t-il (et c’est en tout cas l’analyse que j’en fais), même sa mise au point ne parviendra pas à la réduire, sans compter l’effet pervers qui, si l’on suit le raisonnement de Douglas Engelbart lui-même tel qu’il le présente plus haut, pourrait l’amener à l’accroître. </p>

      <h4 id="part1-3.1.2">3.1.2 Le <i lang="en" xml:lang="en">bootstrapping</i> : le processus et l’outil</h4>
      <p> Ce mélange d’un dispositif technique et d’une philosophie à la fois de conception et d’apprentissage, c’est exactement ce que Douglas Engelbart désigne par le terme de <i lang="en" xml:lang="en">bootstrapping</i>. Douglas Engelbart va le mettre au service de la réalisation d’un artefact susceptible de participer à la maîtrise de la complexité en maîtrisant plus de données et plus rapidement sur cette complexité. </p>

      <h5>Le processus : l’effort comme principe</h5>
      <p> Le <i lang="en" xml:lang="en">bootstrapping</i> est un processus d’apprentissage qui ne vise pas à faciliter directement la manipulation d’un grand volume de données. C’est-à-dire que cette facilitation n’est pas un objectif en soi, c’est un moyen. L’objectif, c’est l’apprentissage, le processus d’apprentissage lui-même. Et ce processus ne passe pas obligatoirement par une logique de la facilité d’accès. Au contraire, non seulement l’effort d’apprentissage n’est pas banni mais il est même valorisé, car il est effectivement une valeur profonde de la philosophie du système. Autrement dit, il s’agit de mettre au point un dispositif technique qui est une réponse possible au défi que pose la complexité mais qui ne peut lui-même être trop simple, car il ne pourrait tout simplement pas absorber cette complexité. Nous l’avons vu, il en va d’une sorte de paradoxe : plus la complexité est importante, plus elle exige un outil complexe pour l’appréhender, lequel outil nécessite du temps pour sa mise au point et la possibilité d’apprendre à s’en servir de manière efficace. Donc l’outil ne peut être simple, ni son apprentissage. Au contraire, il doit impérativement avoir atteint un certain niveau de complexité pour se révéler performant et son apprentissage doit posséder un certain niveau de complexité pour être également efficace. Il faut de toute manière un minimum de temps, aussi rapide soit le fonctionnement du système et pertinent son apprentissage, pour atteindre ce niveau de maturité. Le concept de <i lang="en" xml:lang="en">bootstrapping </i>entérine et synthétise ces conditions. </p>
      <p> Cela signifie que le dispositif technique recherché est justement moins mis au point qu’en recherche perpétuelle de sa propre complexification pertinente en tant qu’outil de gestion de la complexité… à commencer par la gestion de sa propre complexité. C’est donc un dispositif technique qui ne peut être séparé, découplé de son processus d’apprentissage. Ce dernier n’est pas une contrainte, un contre-temps, un détour dommageable, il est un constituant intrinsèque du dispositif. Ce qui explique qu’il ne s’agit en aucune manière ici de simplifier pour simplifier, ou plutôt qu’il ne s’agit pas de rendre les choses plus faciles parce que plus intuitives. Prenons l’exemple du <i lang="en" xml:lang="en">Chord Keyset</i>. Il s’agit d’un outil d’interface fonctionnellement similaire à la souris, mais très différent dans sa configuration. Il s’inspire des touches du piano comme moyen de la médiation. Après tout, le piano fonctionne effectivement. Simplement, jouer du piano n’est en rien évident, cela requiert un apprentissage, un long et difficile apprentissage. Le <i lang="en" xml:lang="en">Chord Keyset </i>est bien évidemment beaucoup plus simple qu’un piano, puisqu’il ne comporte que cinq touches. Mais il n’est en rien un outil de la convivialité, car il n’est pas évident à manipuler. Il demande un <em>effort</em> d’apprentissage. Et selon Douglas Engelbart, qui a fourni cet effort, il est dès lors un outil encore plus efficace que la souris. </p>

      <h5>L’outil (<abbr>NLS</abbr>) : la convivialité comme imprévu et comme effet</h5>
      <p> Si Douglas Engelbart et Bill English en viennent à inventer la souris, ce n’est pas parce que celle-ci serait le résultat d’un effort volontaire de recherche de simplicité ou de facilité d’usage de l’interface. C’est surtout une question d’opportunité. En effet, la souris est d’abord née du besoin de différenciation d’un des commanditaires du laboratoire de Douglas Engelbart : la NASA. Il lui fallait que ses financements servent à quelque chose, mais surtout à quelque chose d’autre que ce à quoi servaient les financements de la <i lang="en" xml:lang="en" class="droit">Rand Corporation</i> <a epub:type="noteref" href="#note_5" id="ref_5"> <sup>[5]</sup></a> notamment. Or, la <i lang="en" xml:lang="en" class="droit">Rand</i> était en train de mettre au point ce que ses inventeurs (Ellis et Davis en 1964) ont appelé la <i lang="en" xml:lang="en">Rand Tablet</i>, un outil d’interface qui utilisait un <i lang="en" xml:lang="en">light pen</i>, un stylet, qui dessinait sur une surface dédiée et dont le dessin s’affichait simultanément sur un écran… Il revenait à Douglas Engelbart et son équipe d’inventer autre chose. D’autant plus que si, dans un tout premier temps, Douglas Engelbart pensait utiliser une <i lang="en" xml:lang="en">Rand Tablet </i>comme outil d’interface, la <i lang="en" xml:lang="en" class="droit">Rand Corporation</i> le lui refusa. </p>
      <p> La souris vient d’une double différenciation : d’une part, alors que le <i lang="en" xml:lang="en">light pen </i>et la <i lang="en" xml:lang="en">Rand Tablet </i>permettent de tracer des graphiques, la souris fonctionne d’abord comme un pointeur qui permet soit d’actionner une opération afin d’écrire des mots, soit une opération pour tracer des traits ; d’autre part la souris permet une parfaite coordination entre ce que fait la main et ce que voit l’œil, alors que ce qui est actif est sur l’écran : la surface de la <i lang="en" xml:lang="en">Rand Tablet </i>est sensible et émet le signal, alors que c’est la souris qui le transmet, quelle que soit la surface ; elle est donc tout terrain, ce n’est pas ce que l’on trace sur la surface (écran ou plateau) qui compte, mais la coordination entre l’œil et la main, car on regarde l’écran alors que la main trace, autrement dit, on ne regarde pas la main mais le résultat de son action. </p>
      <p> La création de la souris renvoie en quelque sorte aux effets latéraux de la gestion de la complexité dont parlait – mais autrement – Douglas Engelbart : elle n’est pas l’effet de ce qui est voulu et recherché – l’effort – mais de ce qui va à l’encontre de cette philosophie, puisqu’elle est le premier outil d’interface convivial. Il y a une sorte de paradoxe ironique dans la mise au point de la souris. En même temps elle peut être, à un autre niveau, considérée comme une expression possible du <i lang="en" xml:lang="en">bootstrapping</i> puisqu’elle provient d’un apprentissage du système en quoi consiste le laboratoire pris globalement. </p>
      <p> En 1968, Douglas Engelbart fait une « démo » de son système <abbr>NLS</abbr> à la <i lang="en" xml:lang="en">ACM/IEEE Computer Society "Fall Joint Computer Conference"</i>, à San Francisco. Cette « démo » est <a href="http://sloan.stanford.edu/mousesite/1968Demo.html">disponible et visible sur internet</a>.</p>
      <figure>
        <img src="../images/PRobertV3-img1.jpg" alt=""/>
        <figcaption>Figure : Annonce de la démonstration de D. Engelbart en 1968 <a epub:type="noteref" href="#fig1" id="ref-fig1">version texte</a></figcaption>
      </figure>
      <p> On y voit en effet Douglas Engelbart montrer son système tout en l’utilisant. La « démo », en ce sens, est cohérente intellectuellement et pratiquement avec la philosophie du <i lang="en" xml:lang="en">bootstrapping</i>, car elle offre une vue de ce que peut ce dispositif à travers le dispositif lui-même. Ce n’est pas un discours sur ce qu’il est possible de faire avec cet outil, c’est une mise en pratique devant les participants à une manifestation professionnelle de ce qu’il est possible de faire (à distance d’ailleurs, puisque si les outils d’interface – dont la souris – sont à San Francisco, l’ordinateur est à Stanford). Autrement dit, Douglas Engelbart prend le <em>risque </em>de faire cette « démo » en direct et inaugure ainsi le genre <a epub:type="noteref" href="#note_6" id="ref_6"> <sup>[6]</sup></a>. Mais ce risque, comme l’effort d’apprentissage, ne font-ils pas partie intégrante d’une certaine manière de penser et de pratiquer le <i lang="en" xml:lang="en">bootstrapping </i>qui est intrinsèquement innovante ? </p>
      <p> La démo est intéressante par sa mise en scène. Car le dispositif adopté permet de voir à travers l’écran sur lequel les instructions et les données qu’introduit Douglas Engelbart s’inscrivent. Nous sommes de l’autre côté du miroir. Nous voyons ainsi Douglas Engelbart parler et nous le voyons écrire, bref, nous le voyons faire la démo comme les gens dans la salle l’ont vu <a epub:type="noteref" href="#note_7" id="ref_7"> <sup>[7]</sup></a>. Parfois nous avons une vue globale qui présente le système technique : écran et plateau disposés devant Douglas Engelbart avec les trois outils d’interface que sont le <i lang="en" xml:lang="en">Chord Keyset</i>, le clavier et la souris. Cette « démo » montre comment un homme, armé de ces trois outils peut créer des <i lang="en" xml:lang="en">statements</i> et jouer avec eux ; comment il peut les manipuler : les créer, les déplacer, les multiplier, les trier, les classer, etc. Bref, pour la première fois on peut assister au prélude de ce qui va devenir ultérieurement notre quotidien, ce travail avec et sur des éléments, des données textuelles, chiffrées ou graphiques. Certes, Douglas Engelbart s’est entraîné et il pratique l’exercice avec une certaine aisance, mais à un moment où tout ce qui est devenu évident pour nous ne l’était pas, même pour lui (il lui arrive de se tromper). </p>
      <p> Ne regardons pas cette « démo » avec nos yeux, notre cerveau et nos mains d’aujourd’hui. Astreignons-nous à la regarder avec les yeux de celui qui, à l’époque, utilisait une tout autre informatique. Cette évidence, qui est la nôtre, parce que nous reconnaissons là ce que nous avons appris à faire depuis, est tout simplement sidérante, radicalement nouvelle (sauf pour une extrême minorité de chercheurs). Regarder cette « démo », c’est remonter à ce moment de l’orée de la convivialité qui n’est encore en rien conviviale parce que beaucoup trop nouvelle. Quand bien même on éprouve inévitablement le sentiment qu’il y a là quelque chose qui change considérablement le rapport à l’ordinateur, rien ne dit encore que cette manière de dialoguer avec lui va devenir dominante. Elle n’est évidente à nos yeux qu’à oublier les apprentissages que nous avons tellement intégrés qu’ils nous habitent et se font oublier comme tels. Une part de la convivialité s’invente là, mais elle ne le sait pas (ni même ses inventeurs peut-être) et pourtant elle reste à inventer en tant que telle. C’est ce à quoi va travailler Alan Kay au Xerox Parc. </p>

      <h4 id="part1-3.1.3">3.1.3 Torsion : A. Kay, la convivialité comme <i lang="la" xml:lang="la">a priori</i></h4>
      <p> Alan Kay n’a jamais directement travaillé avec Douglas Engelbart. Mais à partir de 1971, une partie de l’équipe du laboratoire de Douglas Engelbart, l’ARC (Augmentation Research Center) au SRI (Stanford Research Institute), rejoint le Palo Alto Research Center de Xerox, grand lieu de l’innovation technologique en matière informatique des années 1970. Ce fut le cas de B. English, le co-inventeur de la souris. </p>
      <p> Alan Kay connaît bien les travaux de Douglas Engelbart et de son équipe. Suffisamment pour que Douglas Engelbart se sente quelque peu plagié. En effet, souligne-t-il : « <q lang="en" xml:lang="en">they take parts of the architecture, they take the mouse, they take the idea of the windows, all of that, but the rest of <abbr>NLS</abbr> they just rejected</q> » <a epub:type="noteref" href="#note_8" id="ref_8"> <sup>[8]</sup></a>. Ce qui est resté sur le bord de la route, c’est justement le <i lang="en" xml:lang="en">boostrapping</i>, la co-évolution par l’apprentissage réciproque : autrement dit on a conservé le <i lang="en" xml:lang="en">hard</i> et le <i lang="en" xml:lang="en">soft</i> mais pas la philosophie qui allait avec. Et, d’une certaine manière, aux yeux de Douglas Engelbart, on a tout changé. Ce n’est pas tant que les mêmes outils, plongés dans une approche différente auraient donné de nouveaux outils eux-mêmes différents. C’est que ces outils proposaient des propriétés dont l’expression va se trouver transformée par le changement de philosophie. Car ces propriétés étaient en quelque sorte canalisées (certains diraient bridées) par le système <abbr>NLS</abbr> alors qu’elles vont exploser si l’on peut dire hors de ses contraintes. De facilitateurs (les fenêtres comme la souris par exemple) au service de la gestion d’un outil de gestion de la complexité qui restait lui-même globalement plutôt complexe et requérait ainsi un apprentissage, ils deviennent des outils de la convivialité qui s’autonomisent en quelque sorte et deviennent ce autour de quoi le reste doit tourner, ils deviennent une fin en soi. </p>
      <p> Car la philosophie de Kay est radicalement différente de celle de Douglas Engelbart. Le premier utilisateur auquel il pense pour son <i lang="en" xml:lang="en" class="droit">Dynabook</i> <a epub:type="noteref" href="#note_9" id="ref_9"> <sup>[9]</sup></a> n’est en rien un informaticien de haut niveau. Ce n’est pas un chercheur ou un professionnel dans une entreprise, mais… un enfant. Le système doit être manipulable par un enfant, c’est bien pourquoi il doit être intuitif et convivial. Autrement dit, et quelque peu paradoxalement, la mise en convivialité doit tout faire tourner autour de ses outils (en amont, lors de la conception) afin qu’ils se fassent le plus oublier possible lors de l’usage de la machine. Car cet usage doit être transparent et l’apprentissage tout aussi indolore. C’est-à-dire se faire oublier comme apprentissage. Nous sommes à des années-lumière d’un processus qui reposait, lui, sur l’effort. Dès lors, les outils qui visaient dans ce cadre, non pas à éliminer l’effort, mais à lui permettre d’aller plus loin dans son efficacité, non pas à l’éradiquer, mais seulement à le déplacer pour encore mieux gérer la complexité, deviennent des arguments au service de la valeur centrale de la convivialité. </p>
      <p> Parce que la figure de l’enfant ne passe pas forcément facilement en ce début des années 1970, même chez Xerox, l’étape ultérieure aura un référent certes moins radical, mais néanmoins encore bien naïf ou à tout le moins candide : une secrétaire, Sally, la cinquantaine bien avancée, comme le précisaient Tim Mott et Larry Tesler <a epub:type="noteref" href="#note_10" id="ref_10"> <sup>[10]</sup></a>. Une secrétaire et non un technicien ou un ingénieur. Une secrétaire au service de la gestion d’une entreprise et dont le travail est un travail de fabrication et de manipulation de documents (lettres, factures, etc.). Larry Tesler, chercheur au PARC, passera ensuite chez Apple, emportant avec lui ses compétences dans le <i lang="en" xml:lang="en">drag-and-drop </i>et sa connaissance du nouveau modèle de la souris qui ne fonctionne plus avec des roues (modèle des années 1960 de D. Engelbart et B. English) mais avec une boule (modèle des années 1970 de Xerox). N’oublions pas que Xerox se pense d’abord comme une entreprise de services documentaires, une <i lang="en" xml:lang="en">document company</i>. L’informatique n’est pas une fin en soi, c’est un outil au service de l’efficacité de la création et de la manipulation du document de demain. C’est pourquoi la métaphore du bureau (elle-même proposée par A. Kay) va s’imposer, sur la base des éléments (fenêtres, dossiers, etc.) fournis par les travaux pionniers de l’ARC ; une métaphore explorée concrètement à l’aide de l’interface de la souris/pointeur. </p>
      <p> Bref, on l’aura compris, la convivialité n’est pas native, elle émerge d’une torsion des outils au service d’une logique qui vise à faciliter le travail d’augmentation de l’intelligence (comme outil de gestion de la complexité) au bénéfice d’une logique qui travaille à réduire l’effort afin de rendre l’outil le plus « transparent » <a epub:type="noteref" href="#note_11" id="ref_11"> <sup>[11]</sup></a> possible pour qu’il soit utilisable par le plus grand nombre le plus aisément possible. Ce qui n’est jouable qu’en maximisant le potentiel intuitif et convivial des outils de base inventés par l’équipe de Douglas Engelbart (potentiel qui était maîtrisé par les contraintes du système). Une maximisation qui ne se fait plus au service du déplacement de l’effort afin de maximiser la gestion de la complexité, mais au bénéfice d’une convivialité qui veut éviter au maximum l’effort et limiter au minimum le coût d’apprentissage. </p>
      <p> <abbr>NLS</abbr> était un système de travail collaboratif. Il possédait donc des fonctions de communication et notamment l’une des premières fonctionnalités d’<i lang="en" xml:lang="en">e-mail</i>. Lorsque l’ARC accueille le <i lang="en" xml:lang="en" class="droit">Network Information Center</i> d’Arpanet (en toute fin des années 1960), Douglas Engelbart envisageait que la communauté Arpanet devienne le prochain lieu de développement de <abbr>NLS</abbr> et de la logique du <i lang="en" xml:lang="en">bootstrapping</i>. Or, malgré cette situation carrefour, ce n’est pas la technologie <abbr>NLS</abbr> qui l’emporta, avec ses solutions toujours un peu plus sophistiquées/compliquées, mais l’<i lang="en" xml:lang="en">e-mail </i>mis au point par Ray Tomlinson à <abbr>BBN</abbr> en juillet 1970… </p>
    </section>

    <section epub:type="bodymatter subchapter">
      <h3 id="part1-3.2">3.2 La modélisation, la résolution de problèmes et le réseau</h3>
      <p> On présente volontiers la pensée de J.C.R. <i lang="en" xml:lang="en" class="droit">Licklider</i> comme largement orientée par la question de la communication. Elle est certes centrale <a epub:type="noteref" href="#note_12" id="ref_12"> <sup>[12]</sup></a>, mais il ne faudrait pas qu’elle en vienne à masquer une autre dimension tout aussi fondamentale de sa réflexion, celle des modèles et de la modélisation. Une modélisation dont on retrouve de solides échos même dans les articles sur la communication et la symbiose. Mais surtout une modélisation dont la présentation sera beaucoup plus poussée dans ce qu’il appelle son « <i lang="en" xml:lang="en">pro-cognitive system</i> » (susceptible de constituer la bibliothèque du futur) et ses travaux des années 1970 sur une informatique modulaire. On a retenu surtout le réseau – lui-même plutôt dépendant de l’armée dans les années 1970, alors que <i lang="en" xml:lang="en" class="droit">Licklider</i> le voyait irriguer l’ensemble de la société –, tout en oubliant que même la communication chez <i lang="en" xml:lang="en" class="droit">Licklider</i> est d’abord une question de modélisation des représentations. </p>
      <p> La modélisation ou la question des modèles <a epub:type="noteref" href="#note_13" id="ref_13"> <sup>[13]</sup></a> intervient en quelque sorte dans la vision de <i lang="en" xml:lang="en" class="droit">Licklider</i> comme l’apprentissage chez Douglas Engelbart. De même que l’apprentissage ne renie pas les logiques de facilitation mais empêche leur autonomisation dans une logique de pure convivialité, de même la modélisation ne renie pas celle de la communication (homme-machine et/ou réseautique) mais l’empêche de devenir une pure communication, un pur lien qui pourrait s’affranchir de la logique de la modélisation. Comme le souligne R. Fano, </p>
      <blockquote lang="en" xml:lang="en">
        <p> He was interested in almost any aspect of human cognitive activities. While he became a knowledgeable and skillful programmer, his focus remained on the cognitive aspects of computer usage. He was fascinated by computers, because he understood in a deep way their potential to help people in a broad spectrum of activities by extending and amplifying their intellectual power, by improving the effectiveness of their communication and collaboration, and last but not least, by freeing them from the drudgery of clerical operations, to which he was particularly allergic. <a epub:type="noteref" href="#note_14" id="ref_14"> <sup>[14]</sup></a> </p>
      </blockquote>
      <p> C’est ainsi toujours la dimension cognitive, de résolution de problèmes et d’apprentissage qui l’a intéressé. Or, ces trois dimensions, à ses yeux, passent par la modélisation. La communication elle-même, dans un tel schéma ne peut être autonome, elle est inévitablement liée à la question des modèles qui, à son tour, ne doit pas plus prétendre à l’autonomie ou devenir une fin en soi, car l’une comme l’autre doivent être au service de la résolution de problèmes. </p>

      <h4 id="part1-3.2.1">3.2.1 <i lang="en" xml:lang="en">On line man-computer communication</i><a epub:type="noteref" href="#note_15" id="ref_15"> <sup>[15]</sup></a></h4>
      <p> Ce qui focalise l’attention de <i lang="en" xml:lang="en" class="droit">Licklider</i> c’est le <i lang="en" xml:lang="en">problem-solving</i>, la résolution de problème. Celle-ci tient en quelque sorte dans sa vision une place équivalente à celle de la complexité dans celle de Douglas Engelbart. </p>

      <h5><i lang="en" xml:lang="en">Complementation</i> et symbiose</h5>
      <p> La résolution de problèmes passe chez <i lang="en" xml:lang="en" class="droit">Licklider</i> par ce qu’il appelle une <i lang="en" xml:lang="en">complementation</i> entre l’ordinateur et l’homme. Nous sommes en 1962, c’est pratiquement nouveau et intellectuellement rarement revendiqué comme tel, sauf par <i lang="en" xml:lang="en" class="droit">Licklider</i> lui-même dans son article de 1960 sur la symbiose. C’est pourquoi il écrit : </p>
      <blockquote lang="en" xml:lang="en">
        <p> The fundamental aim in designing a man-computer symbiosis is to exploit the complementation that exists between human capabilities and present computer capabilities : </p>
        <ol class="liste-alpha">
          <li> To select goals and criteria – human; </li>
          <li> To formulate questions and hypotheses – human; </li>
          <li> To select approaches – human; </li>
          <li> To detect relevance – human; </li>
          <li> To recognize patterns and objects – human; </li>
          <li> To handle unforseen and low probability exigencies – human; </li>
          <li> To store large quantities of information – human and computer; with high precision – computer; </li>
          <li> To retrieve information rapidly – human and computer; with high precision – computer; </li>
          <li> To calculate rapidly and accurately – computer; </li>
          <li> To build up progressively a repertoire of procedures without suffering loss due to interference or lack of use – computer. <a epub:type="noteref" href="#note_16" id="ref_16"> <sup>[16]</sup></a></li>
        </ol>
      </blockquote>
      <p> Est-ce pour rassurer ? Mais une majorité des capacités listées relève de l’humain en propre (6 sur 10). Deux sont partagées par l’homme et la machine, à la précision près, ce qui signifie que cette dernière va l’emporter à terme. Enfin, deux renvoient exclusivement à l’ordinateur. Toute la question, que n’aborde pas <i lang="en" xml:lang="en" class="droit">Licklider</i>, n’est-elle pas de savoir si l’ordinateur va remonter progressivement (puisqu’il parle de « <i lang="en" xml:lang="en">present computer capabilities</i> ») la liste et laisser la portion congrue à l’homme, dans une relation moins symbiotique que de domination ? Une domination qui ne serait pas seulement technique parce qu’elle aurait des conséquences directes sur la résolution de problèmes d’organisation socio-politique. </p>
      <p> Cette symbiose va s’appliquer aux champs suivants : les mathématiques, l’informatique, les <i lang="en" xml:lang="en">war</i> et <i lang="en" xml:lang="en">management gaming</i>, l’éducation <a epub:type="noteref" href="#note_17" id="ref_17"> <sup>[17]</sup></a> ; il ajoute que « <q lang="en" xml:lang="en">In the planning and design of systems of many kinds, digital simulation is recognized as a valuable technique</q> » <a epub:type="noteref" href="#note_18" id="ref_18"> <sup>[18]</sup></a>. Bref, un univers de résolution de problèmes, pratiques et conceptuels qui passe le plus souvent par des opérations de modélisation. </p>

      <h5>Trois applications</h5>
      <p> L’article présente ensuite trois applications dans lesquelles l’articulation entre homme et machine à la fois exige et permet d’améliorer la modélisation des activités. </p>
      <dl class="liste-paragraphe">
        <dt> La modélisation des échanges de communication dans l’enseignement.</dt>
        <dd> Modéliser la relation homme/machine permet d’élaborer des systèmes d’aide à l’enseignement des langues et de l’apprentissage des mathématiques notamment. </dd>
        <dt> La simulation hospitalière, le <i lang="en" xml:lang="en" class="droit">co-planner</i>.</dt>
        <dd> Ce qu’il appelle un <i lang="en" xml:lang="en" class="droit">co-planner</i> est un dispositif qui articule la technique (la machine), les données et les programmes qui permettent de les « mouliner ».</dd>
        <dd> Encore une fois <i lang="en" xml:lang="en" class="droit">Licklider</i> fait bien attention à éviter la critique d’une machine qui remplacerait l’homme : si elle simule, c’est pour aider la prise de décision et non s’y substituer. C’est pourquoi « <q lang="en" xml:lang="en">the computer, parts of the system are not intended, we should emphasize, to calculate optimal plans or designs ; they are intended to provide memory, manipulative, computing, and display functions in such a way that they can be integrated with the more intuitive functions supplied by the human parts of the system</q>. » <a epub:type="noteref" href="#note_19" id="ref_19"> <sup>[19]</sup></a> </dd>
        <dt lang="en" xml:lang="en">Visualizing the operation of computer programs.</dt>
        <dd> Enfin, <i lang="en" xml:lang="en" class="droit">Licklider</i> envisage d’appliquer la démarche de résolution de problèmes/modélisation à l’informatique elle-même : « <q lang="en" xml:lang="en">the conclusion, therefore, is that it might be interesting to experiment with programs that display various aspects of the internal operation of the running computer</q> » <a epub:type="noteref" href="#note_20" id="ref_20"> <sup>[20]</sup></a>. Cette boucle récursive, l’auteur la compare volontiers à une « introspection », mais ce retour n’est-il pas moins une conscience qu’un simple outil de contrôle ? </dd>
      </dl>
      <p> En conclusion, il revient, mais cette fois sous la forme d’une métaphore (celle de l’œuf et de la poule) sur son idée d’une symbiose. En effet, écrit-il, </p>
      <blockquote lang="en" xml:lang="en">
        <p> […] it appears that the development of effective human cooperation and the development of man-computer symbiosis are "chicken-and-egg" problems. It will take unusual human teamwork to set up a truly workable man-computer partnership, and it will take mancomputer partnerships to engender and facilitate the human cooperation. For that reason, the main tasks of the first time-sharing computer system with many remote stations may well be in the areas of language and procedure development. <a epub:type="noteref" href="#note_21" id="ref_21"> <sup>[21]</sup></a> </p>
      </blockquote>
      <p> S’il s’agit, dans cet article, d’améliorer la communication homme/machine (H/M) réseautique ce n’est pas contre ou au détriment de la démarche rationnelle/scientifique. Au contraire, <i lang="en" xml:lang="en" class="droit">Licklider</i> veut améliorer la capacité de résolution de problème de l’homme en société. Autrement dit, améliorer l’interface H/M c’est améliorer cette aptitude en croisant les capacités de l’homme et de la machine et en augmentant la vitesse d’exécution des opérations. C’est aussi rendre dynamique les opérations de simulation. Bref, il entrecroise communication et modélisation, en ce sens que la communication (facilité d’utilisation et ce, à distance) est au service de la modélisation comme la modélisation (dynamique) est au service de la communication, tout en gardant à l’esprit que les deux sont au service de la résolution de problème et d’aide à la décision. </p>

      <h4 id="part1-3.2.2">3.2.2 Le <i lang="en" xml:lang="en">procognitive system</i></h4>
      <p> Au début des années 1960 (de 1960 à 1962) J.C.R. <i lang="en" xml:lang="en" class="droit">Licklider</i>, alors chez <abbr>BBN</abbr> (Bolt Beranek et Newman <a epub:type="noteref" href="#note_22" id="ref_22"> <sup>[22]</sup></a>), est chargé d’une étude commanditée par le Council on Library Resources (une organisation créée par la Ford Foundation en 1956). Cette étude vise à définir ce que sera la bibliothèque du futur, celle des années 2000, dit-il <a epub:type="noteref" href="#note_23" id="ref_23"> <sup>[23]</sup></a>. Il souligne que la science des bibliothèques de l’époque n’offre ni concepts ni système qui serait efficace ou <i lang="en" xml:lang="en">desirable</i> (souhaitable en français ou moins littéralement « que l’on aurait envie de promouvoir ») : constat plutôt négatif. Ce sera l’occasion de revenir sur les outils du savoir et de l’accumulation du savoir développés jusque-là – notamment sur la bibliothèque et le livre comme outils de modélisation/présentation/diffusion de la connaissance. Il présente un modèle simplifié de leurs propriétés essentielles, dont assez paradoxalement il souligne les limites (ce qui les disqualifie) tout en conservant une large part des aptitudes acquises de modélisation des connaissances. Il en vient, bien évidemment, à présenter un système informatisé qu’il nomme un <i lang="en" xml:lang="en">pro-cognitive system </i>pour en souligner les qualités dynamiques. </p>

      <h5>Page, livre et bibliothèque</h5>
      <p> Ce qui intéresse <i lang="en" xml:lang="en" class="droit">Licklider</i> ce n’est ni le fait que l’information ou la connaissance soit imprimées sur papier, ni même les mots et les phrases, mais « <i lang="en" xml:lang="en">the facts, concepts, principles, and ideas that lie behind the visible and tangible aspects of documents</i> » <a epub:type="noteref" href="#note_24" id="ref_24"> <sup>[24]</sup></a>. Ce qu’il appelle une <i lang="en" xml:lang="en">transformable information</i>, c’est-à-dire une information que l’on peut transporter d’un support à l’autre sans déperdition, ou avec une déperdition/dégradation minimale. Tout ce qui relève de l’art s’y prête particulièrement mal, car même une reproduction est une transformation. Même la littérature y perd beaucoup, ce n’est véritablement valable que pour les activités scientifiques, techniques, l’histoire, la médecine, le droit et la gestion (des entreprises et de l’État). </p>
      <p> Selon lui, les hommes pensent en suivant des schèmes (<i>schemata</i>), qui s’articulent en trois niveaux : le système, les subsystèmes et les composants. L’innovation doit se faire en réutilisant et modifiant le niveau des composants. Or, dans le domaine de la bibliothèque : le système c’est la bibliothèque, les subsystèmes, les livres et les composants, les pages. </p>
      <p> D’ailleurs dans ces trois niveaux <i lang="en" xml:lang="en" class="droit">Licklider</i> considère que la page est un bon outil d’affichage (« <q lang="en" xml:lang="en">as a medium for display of information, the printed page is superb</q> » <a epub:type="noteref" href="#note_25" id="ref_25"> <sup>[25]</sup></a>), alors que le livre est volumineux (<i lang="en" xml:lang="en">bulky</i>) et lourd (<i lang="en" xml:lang="en">heavy</i>) ; bref, « <q lang="en" xml:lang="en">books are not very good display devices. In fulfilling the storage function, they are only fair. With respect to retrievability they are poor</q> » <a epub:type="noteref" href="#note_26" id="ref_26"> <sup>[26]</sup></a>. La bibliothèque, qui regroupe des livres, ne peut être un outil satisfaisant : « <q lang="en" xml:lang="en">if books are intrinsically less than satisfactory for the storage, organization, retrieval, and display of information, then librairies of books are bound to be less than satisfactory also</q>. » <a epub:type="noteref" href="#note_27" id="ref_27"> <sup>[27]</sup></a> </p>
      <p> Livres et bibliothèques sont d’autant moins performants qu’ils ne correspondent pas du tout à ce qu’est, aux yeux de <i lang="en" xml:lang="en" class="droit">Licklider</i>, l’interaction avec ce qu’il appelle le <i lang="en" xml:lang="en">body of knowledge : « conceived of as a dynamic process involving repeated examinations and intercomparisons of very small and scattered [<i lang="fr" xml:lang="fr">dispersées</i>] parts</i> ». Cette vision est singulièrement proche de la logique du fragment qui domine aujourd’hui sur Internet. Il reproche même à la page imprimée sa passivité (ce qui est oublier la dynamique de l’index et de la note de bas de page, voire de l’encadré). </p>
      <p> Il en va selon lui de deux difficultés : celle de séparer l’information de la page elle-même et l’absence de ce qu’il appelle des <i lang="en" xml:lang="en">active processors</i>. C’est pourquoi il veut substituer (il emploie le verbe <i lang="en" xml:lang="en">to substitute</i>) au livre un dispositif qui transmette/diffuse l’information sans transport matériel et qui, non seulement présente l’information aux gens, mais la traite aussi pour eux. Ce substitut se composera d’une conjugaison de bibliothèque et d’ordinateur. Il qualifie un tel dispositif de <i lang="en" xml:lang="en">procognitive system</i><a epub:type="noteref" href="#note_28" id="ref_28"> <sup>[28]</sup></a>, et précise en note : « <q lang="en" xml:lang="en">the system in which we are interested are broader than present day librairies ; the system will extend farther into the process of generating, organizing and using knowledge</q>. » </p>
      <p> Il rejette la page comme outil de stockage de l’information à long terme mais pas à court terme. D’ailleurs il conserve un certain nombre de <em>schèmes </em>hérités de la page imprimée : </p>
      <ul>
        <li>la hiérarchie de segments de textes (caractère, mot, paragraphe, chapitre etc..) ; </li>
        <li>les concepts d’information textuelle, tabulaire, graphique et picturale/imagière ; </li>
        <li>des concepts comme ceux d’auteurs, d’abstracts, notes de bas de page et listes de références ; </li>
        <li>des concepts comme article original, compte rendu, note, lettre, journal et livre (« <i lang="en" xml:lang="en">in the sense of classes of information, not physical carriers of information</i> ») ; </li>
        <li>des concepts comme catalogue, index, descripteur et thésaurus.</li>
      </ul>
      <p> Paradoxalement, au final, il ne rejette pas grand-chose du monde ancien du livre et des bibliothèques, si ce n’est leur concrétisation elle-même… mais n’est-ce pas parce qu’il veut introduire un nouveau support, l’ordinateur ? Nous allons voir cependant que les choses sont un peu plus subtiles. </p>

      <h5>Pertinence de l’informatique</h5>
      <p> S’il récuse (partiellement) le vieux monde de la bibliothèque et du livre, il rejette également une conception déjà dépassée à ses yeux de l’informatique. Il ne veut plus d’une informatique de données, de programmes, de cartes perforées, que l’on traite dans un centre informatique et qui ne peut être l’outil de concrétisation de son <i lang="en" xml:lang="en">procognitive system</i>. Il lui faut une autre informatique qui repose sur les éléments suivants : </p>
      <ul class="liste-alpha" lang="en" xml:lang="en">
        <li>Random acces memory </li>
        <li>Content adressable memory </li>
        <li>Parallel processing </li>
        <li>CRT displays and light pens </li>
        <li>Procedures, subroutines and related components of computer programs </li>
        <li>Hierarchical and recursive program structures </li>
        <li>List structures </li>
        <li>Procedure-oriented and problem-oriented languages </li>
        <li>Xerographics output units </li>
        <li>Time-sharing computer systems with remote stations</li>
      </ul>
      <p> La philosophie de sa démarche réside toute entière dans cette idée : « <q lang="en" xml:lang="en">what is of value for our purpose is not, for example, the oscilloscope or the light pen. It is the schema in which a man sits at a desk, writes or draws on a surface with a stylus, and thereby communicates to a programmed information processor with a large memory</q> ». Ce n’est, pas plus qu’avec la bibliothèque et le livre, la concrétisation qui compte, c’est le concept, le schéma fonctionnel du dispositif, qui est fondamentalement un dispositif d’écriture-lecture et de communication (questions-réponses immédiates) avec l’ordinateur, que ce soit à travers les techniques de l’époque, dont <i lang="en" xml:lang="en" class="droit">Licklider</i> connaît à la fois le potentiel et les limites… ou celles de demain (d’aujourd’hui par exemple) ! C’est pourquoi il souligne qu’il est « <q lang="en" xml:lang="en">important to recognize that our progress, must for a time, be largely conceptual</q> ». </p>

      <h5 lang="en" xml:lang="en">The procognitive system</h5>
      <p> J.C.R. <i lang="en" xml:lang="en" class="droit">Licklider</i> part du principe que c’est le système entre l’ordinateur, l’homme et ce qu’il appelle le <i lang="en" xml:lang="en">body of knowledge </i>qui doit être pris en compte. Pas l’une ou deux seulement des trois composantes. On ne doit pas non plus reconduire l’approche traditionnelle qui sépare certaines fonctions allouées à l’homme et d’autres dévolues à la machine. Il faut tisser les deux ensemble nous dit <i lang="en" xml:lang="en" class="droit">Licklider</i> (c’est lui qui emploie la métaphore de la couverture <a epub:type="noteref" href="#note_29" id="ref_29"> <sup>[29]</sup></a>). Il pousse ainsi un peu plus loin encore le programme de l’article de 1962 qui raisonnait, rappelons-le, en termes de « compensation ». </p>
      <p> Son <i lang="en" xml:lang="en">procognitive system </i>requiert un médium physique, des langages, et une capacité d’adaptation, voire d’auto-organisation. Je vais me focaliser sur le premier point. <i lang="en" xml:lang="en" class="droit">Licklider</i> préfère le terme <i lang="la" xml:lang="la">intermedium </i>à celui d’interface qui, selon lui, renvoie à la notion de surface de séparation justement. <i lang="la" xml:lang="la">Intermedium </i>est censé dire le lien, la relation (en écho avec sa philosophie de la symbiose), et être la base d’un véritable <i lang="en" xml:lang="en">personal documentation system</i>. </p>
      <p> Les prérequis du système sont les suivants : </p>
      <ul>
        <li>Un moniteur/écran couleur ou <abbr>NB</abbr> (« <q lang="en" xml:lang="en">each element of the display should be selectively erasable by the computer program, and also either directly by the operator</q> »). </li>
        <li>Il doit permettre d’effectuer des « <i lang="en" xml:lang="en">hard copy</i> », des copies permamentes. </li>
        <li>Il doit permettre de faire des dessins et des graphiques, grâce à un stylet (« <q lang="en" xml:lang="en">if the stylus is connected by a wire to console, the wire should be very light and flexible and should not constrain the manipulation of the stylus</q> » – ce qui nous semble une <em>évidence </em>aujourd’hui et ne l’est pas à l’époque), </li>
        <li>Le dispositif doit également être fiable et économiquement viable. </li>
        <li>Il doit aussi posséder une interface d’écriture, un clavier ; <i lang="en" xml:lang="en" class="droit">Licklider</i> souligne que, dès lors qu’un clavier est connecté à un ordinateur, il n’y a plus de raison pour que ce qui est tapé soit immédiatement imprimé sur une feuille de papier ; il peut l’être, mais va d’abord être affiché sur l’écran – là encore, ce qui nous parait une <em>évidence</em> aujourd’hui mérite une remarque précise de l’auteur à l’époque.</li>
      </ul>
      <p> <i lang="en" xml:lang="en" class="droit">Licklider</i> prévoit que son <i lang="en" xml:lang="en">procognitive system</i> ne doit pas faire l’objet que d’une seule utilisation individuelle. C’est aussi un outil de travail en groupe, un outil de travail collaboratif (pensons à <abbr>NLS</abbr> d’Englebart). Il envisage deux solutions : </p>
      <ul>
        <li>Des consoles reliées entre elles selon des techniques qu’il renvoie explicitement au téléphone et à la <abbr>TV</abbr> (alors que ses idées par ailleurs mèneront au développement d’une logique de réseau purement informaticienne). </li>
        <li>Un dispositif de projection sur grand écran, avec un dérivé du <i lang="en" xml:lang="en">light pen</i> pour la communication entre les membres du groupe et la machine et un puissant système de zoom (<i lang="en" xml:lang="en" class="droit">Power-point</i> et <i lang="en" xml:lang="en" class="droit">Google maps</i> tout ensemble avant la lettre ?).</li>
      </ul>

      <h4 id="part1-3.2.3">3.2.3 La fin des années 1960</h4>
      <p> Qu’est-ce donc que « communiquer » pour notre auteur dans son article de 1968 « <q lang="en" xml:lang="en">Computer as a Communication Device</q> » ? Communiquer, c’est échanger des modèles informationnels à propos de quelque chose. Des modèles qui doivent être sanctionnés par la société. Autrement dit, la communication est définie par <i lang="en" xml:lang="en" class="droit">Licklider</i> comme une opération de <i lang="en" xml:lang="en">cooperative modeling</i>. Opération soutenue par des moyens d’<i lang="en" xml:lang="en">externalization : « Even such a simple externalized model as a flow diagram or an outline – because it can be seen by all the communicators – serves as a focus for discussion. It changes the nature of communication</i>. » <a epub:type="noteref" href="#note_30" id="ref_30"> <sup>[30]</sup></a> </p>
      <p> L’ordinateur ne doit pas être utilisé seulement comme outil d’automatisation de tâches. C’est ce à quoi aboutit <i lang="en" xml:lang="en" class="droit">Licklider</i>, après avoir pris connaissance des travaux de D. Engelbart sur les interfaces et l’interaction (le système souris-pointeur par exemple). </p>
      <blockquote lang="en" xml:lang="en">
        <p> We can say with genuine and strong conviction that a particular form of digital computer organization, with its programs and its data, constitutes the dynamic, moldable medium that can revolutionize the art of modeling, and that in so doing can improve the effectiveness of communication among people so much as perhaps to revolutionize that also. <a epub:type="noteref" href="#note_31" id="ref_31"> <sup>[31]</sup></a></p>
      </blockquote>
      <p> Soulignons que l’ordinateur est vu, dès cette époque comme un <i lang="la" xml:lang="la">medium</i> par <i lang="en" xml:lang="en" class="droit">Licklider</i>, ce qui est pour le moins nouveau. Et ce médium est à la fois modélisé/modélisant et pensé comme ce qui va « révolutionner » l’exercice même de la modélisation. Or, cette modélisation ne s’oppose pas à la communication qui, pour le psychologue qu’est avant toute chose JCR. <i lang="en" xml:lang="en" class="droit">Licklider</i> est échange de modèles de représentations. C’est pourquoi il revient encore une fois sur l’idée que « <q lang="en" xml:lang="en">creative, interactive communication requires a plastic or modable medium that can be modelled, a dynamic medium in which premises will flow into consequences, and above all a common medium that can be contributed to and experimented with by all</q>[…] » <a epub:type="noteref" href="#note_32" id="ref_32"> <sup>[32]</sup></a> </p>
      <p> Toujours en cette fin des années 1960, <i lang="en" xml:lang="en" class="droit">Licklider</i> avait à l’esprit un ordinateur qui pourrait être utilisé par des chercheurs non spécialisés en informatique, avec un minimum de programmation. Or, ce qui intéresse un chercheur d’une autre discipline selon <i lang="en" xml:lang="en" class="droit">Licklider</i>, c’est de pouvoir utiliser l’ordinateur comme un outil de modélisation. Un outil de modélisation avec lequel on peut interagir directement grâce à un dispositif d’interface graphique. Le chercheur aurait à sa disposition (et/ou créerait) une bibliothèque de modules logiciels qu’il pourrait ensuite utiliser comme des outils au service de ses besoins de modélisation. Chaque module serait indexé pour pouvoir être facilement réutilisé. Vision puissante, mais fort difficile à mettre en œuvre à l’époque. <i lang="en" xml:lang="en" class="droit">Licklider</i> s’est beaucoup investi personnellement dans cette démarche entre 1969 et 1974 sur un financement <abbr>IPTO</abbr>, et sa bibliothèque a atteint les 2 000 modules… Cependant, l’ARPA avait pour objectif de financer des projets dans leur phase de lancement, c’est-à-dire cinq années. Dès lors, après 1974, <i lang="en" xml:lang="en" class="droit">Licklider</i> se retrouva sans financement… et le projet périclita ; d’ailleurs il n’écrivit aucun article ni rapport sur ce projet… on peut y voir plus qu’une déception. </p>
      <p> Aujourd’hui, la prégnance d’Internet – et plus globalement celle des réseaux (d’informatique et de télécommunications) – est telle que l’on relit volontiers le travail de <i lang="en" xml:lang="en" class="droit">Licklider</i> à l’aune de la question de la communication en oubliant peut être que la pensée de <i lang="en" xml:lang="en" class="droit">Licklider</i> s’adressait autant aux questions de la résolution de problèmes et de la modélisation. La communication homme/machine et réseautique n’étant, d’une certaine manière, qu’un outil au service de leur efficacité. Certes, <i lang="en" xml:lang="en" class="droit">Licklider</i> a publié un article sur les réseaux <a epub:type="noteref" href="#note_33" id="ref_33"> <sup>[33]</sup></a> en 1963 et il a été le directeur de l’<abbr>IPTO</abbr>… mais pendant deux ans seulement (de 1962 à 1964) bien avant le lancement d’ARPANET et alors que son grand projet – MAC – est un projet de <i lang="en" xml:lang="en">time sharing</i> ; certes, ses idées, reprises par Robert Taylor et Larry Roberts, ont participé au développement d’ARPANET, mais les réseaux qu’envisage <i lang="en" xml:lang="en" class="droit">Licklider</i> relèvent largement d’une technologie, le <i lang="en" xml:lang="en">time-sharing</i>, qu’il promeut dans ses travaux de 1960/1962 et 1968, et qui sera amplement dépassée dès la fin des années 1960. ARPANET, en ce sens, n’est pas une application des idées de <i lang="en" xml:lang="en" class="droit">Licklider</i>. C’est pourquoi il n’est pas aberrant de considérer que le poids rétrospectif que font peser les réseaux en vient à opérer une <em>torsion </em>non négligeable de sa vision de l’ordinateur conçu en premier comme outil de résolution de problèmes/modélisation. Une torsion qui oublie que cette logique met la communication à son service (au moins autant que l’inverse) et qu’elle leste le projet de <i lang="en" xml:lang="en" class="droit">Licklider</i> d’un poids (celui d’investissements lourds) et d’un sérieux (dans le management des projets) qui participent certes à alléger les apprentissages mais, là encore pour aller plus loin et plus vite, c’est-à-dire sans les renier. </p>
    </section>

    <section epub:type="bodymatter subchapter">
      <h3 id="part1-3.3">3.3 Conclusion</h3>
      <p> En définitive, l’histoire de l’informatique des années 1970 correspond à une torsion des visions de D. Engelbart et JCR. <i lang="en" xml:lang="en" class="droit">Licklider</i> (on peut aussi considérer que la déformation de ces visions s’offre comme un outil de lecture/décryptage de cette histoire) qui aboutit à la mise entre parenthèse de l’apprentissage et de la modélisation au bénéfice de la convivialité ou de la communication dans le cadre de systèmes plutôt fermés (d’abord chez Xerox puis avec Apple). On peut alors se demander si le Libre ne correspond pas à la « reprise » (mais sans forcément assumer une continuité) de la logique de l’apprentissage et de la modélisation (au sens large). Car s’il est « libre » c’est aussi sur le fond de l’exigence d’un accès difficile qui nécessite un long et intense apprentissage et d’un fort investissement technique (quand bien même certains l’oublient parce qu’ils ne le vivent pas comme tel). Autrement dit, la « liberté » technico-sociale appelée de ses vœux par le mouvement du Libre est en quelque sorte payée par le prix de l’acquisition d’une compétence technique élevée. Ne butera-t-elle pas toujours sur une convivialité et une communication peut-être aliénantes, mais socialement et cognitivement moins coûteuses ? </p>
    </section>

    <aside epub:type="footnotes" class="epub-footnotes">
      <ol>
        <li><a epub:type="footnote" href="#ref_1" id="note_1">[1]</a> Foucault voulait passer sous les savoirs constitués afin d’en retrouver le terreau fondateur, entre dispositifs et discours pratiques. Non pas faire l’histoire de la médecine, donc, mais restituer la pratique de l’examen à la fois comme discours et comme dispositif d’observation qui, progressivement, va installer le socle sur lequel se construira un savoir à proprement parler médical. Il s’agit de revenir, ici, aux dispositifs et aux discours qui sous-tendent l’avènement de l’informatique communicante.</li>
        <li><a epub:type="footnote" href="#ref_2" id="note_2">[2]</a> Ce projet a été développé au sein d’un laboratoire justement appelé <i lang="en" xml:lang="en" class="droit">Augmentation Research Center</i> (<abbr>ARC</abbr>) créé par Engelbart en 1968 dans le cadre du <i lang="en" xml:lang="en" class="droit">Stanford Research Institute</i>.</li>
        <li><a epub:type="footnote" href="#ref_3" id="note_3">[3]</a> et <a epub:type="footnote" href="#ref_4" id="note_4">[4]</a><span class="auteur">Baridini</span> Thierry <cite lang="en" xml:lang="en">Bootstrapping: Douglas Engelbart, Coevolution, and the Origins of Personal Computing.</cite> <i lang="en" xml:lang="en">Stanford: Stanford University Press</i>, 2001 p. 10 </li>
        <li><a epub:type="footnote" href="#ref_5" id="note_5">[5]</a> La <i lang="en" xml:lang="en" class="droit">Rand Corporation</i> était un think tank, un outil de réflexion et de financement de projets de recherche créé à la fin des années 1940 par l’<abbr>US</abbr> Air Force (1946). Elle deviendra ensuite (à partir de 1948) une non profit organization néanmoins encore largement financée par l’<abbr>USAF</abbr>. Elle sera l’un des principaux lieux de l’innovation stratégique et technologique au service de la défense américaine dans les années 1950. </li>
        <li><a epub:type="footnote" href="#ref_6" id="note_6">[6]</a> La « démo » est en effet un lieu qui donne à voir la technique à la fois dans son dispositif (que l’on fait fonctionner) et dans un discours pratique qui explique comment cela fonctionne : ce geste de D. Engelbart, invente ainsi une mise en scène de l’informatique qui est devenue une pratique récurrente dans le milieu.</li>
        <li><a epub:type="footnote" href="#ref_7" id="note_7">[7]</a> Comme le souligne Engelbart lui-même : <q lang="en" xml:lang="en">« I saw the same image on my workstation screen there as was projected for the audience to see »</q>, <span class="auteur">Bardini</span>, Thierry <cite lang="en" xml:lang="en">Bootstrapping: Douglas Engelbart, Coevolution, and the Origins of Personal Computing.</cite> <i class="droit" lang="en" xml:lang="en">Stanford: Stanford University Press</i>, 2001 p. 140</li>
        <li><a epub:type="footnote" href="#ref_8" id="note_8">[8]</a> <span class="auteur">Bardini</span>, Thierry <cite lang="en" xml:lang="en">Bootstrapping: Douglas Engelbart, Coevolution, and the Origins of Personal Computing.</cite> <i class="droit" lang="en" xml:lang="en">Stanford: Stanford University Press</i>, 2001 p. 154.</li>
        <li><a epub:type="footnote" href="#ref_9" id="note_9">[9]</a> <q  lang="en" xml:lang="en">« Several years ago, we crystallized our dreams into a design idea for a personal dynamic medium the size of a notebook (the Dynabook) which could be owned by everyone and could have the power to handle virtually all of its owner’s information-related needs »</q>. <span class="auteur">Kay</span>, Alan et Adèle <span class="auteur">Goldberg</span> <i class="droit" lang="en" xml:lang="en">Personal dynamic media</i>. dans Noah <span class="auteur">Wardrip-Fruin</span> et Nick <span class="auteur">Montfort</span> (éd.) <cite lang="en" xml:lang="en">The New Media Reader</cite>. <i class="droit" lang="en" xml:lang="en">Cambridge Mass.: <abbr>MIT</abbr> Press</i>, 2003.</li>
        <li><a epub:type="footnote" href="#ref_10" id="note_10">[10]</a> <span class="auteur">Bardini</span>, Thierry <cite lang="en" xml:lang="en">Bootstrapping: Douglas Engelbart, Coevolution, and the Origins of Personal Computing.</cite> <i class="droit" lang="en" xml:lang="en">Stanford: Stanford University Press</i>, 2001 p. 162.</li>
        <li><a epub:type="footnote" href="#ref_11" id="note_11">[11]</a> Les couches d’interface graphique qui séparent l’utilisateur du code peuvent soit être vues comme un allègement parce qu’elles évitent à cet utilisateur d’investir dans la connaissance et la manipulation du code, soit comme une barrière puisqu’elles l’éloignent d’une « vraie » maîtrise de l’informatique qui ne peut passer que par celle du code.</li>
        <li><a epub:type="footnote" href="#ref_12" id="note_12">[12]</a> Je l’ai moi-même souligné dans <span class="auteur">Robert</span>, Pascal, JCR Licklider et l’informatique de réseau(x) : imaginaire, impensé ou pensée visionnaire. <cite>Études de communication</cite>, 36 2011.</li>
        <li><a epub:type="footnote" href="#ref_13" id="note_13">[13]</a> Car la question des modèles renvoie aussi bien à une modélisation plutôt « dure » (Cf. l’article de 1962 et le livre de 1965) qu’à une modélisation plutôt « molle » (de l’échange de modèles entre esprits).</li>
        <li><a epub:type="footnote" href="#ref_14" id="note_14">[14]</a> <span class="auteur">Fano</span>, Robert M., <cite lang="en" xml:lang="en">Joseph Carl Robnett Licklider 1915-1990, a biographical memoir.</cite> <i class="droit" lang="en" xml:lang="en">Washington, <abbr>DC</abbr>: National Academy of Sciences</i>, 1998 p. 20.</li>
        <li><a epub:type="footnote" href="#ref_15" id="note_15">[15]</a> Titre de l’article de J.C.R. Licklider de 1962.</li>
        <li><a epub:type="footnote" href="#ref_16" id="note_16">[16]</a> et <a epub:type="footnote" href="#ref_18" id="note_18">[18]</a> <span class="auteur">Licklider</span>, Joseph C. R. et <span class="auteur">Clark</span> Weldem « On line man-computer communication », dans <cite lang="en" xml:lang="en"><a href="http://doi.ieeecomputersociety.org/10.1109/AFIPS.1962.24">Proceedings of the Spring Joint Computer Conference</a></cite>, <i class="droit" lang="en" xml:lang="en">Cambridge, Mass.: AFIPS</i>, 1962 p. 114.</li>
        <li><a epub:type="footnote" href="#ref_17" id="note_17">[17]</a> Il ajoute également ce qu’il appelle les <i lang="en" xml:lang="en" class="droit">semi-automatic laboratories</i>, sans expliquer de quoi il s’agit précisément.</li>
        <li><a epub:type="footnote" href="#ref_19" id="note_19">[19]</a> <span class="auteur">Licklider</span>, Joseph C. R. et <span class="auteur">Clark</span> Weldem « On line man-computer communication », dans <cite lang="en" xml:lang="en"><a href="http://doi.ieeecomputersociety.org/10.1109/AFIPS.1962.24">Proceedings of the Spring Joint Computer Conference</a></cite>, <i class="droit" lang="en" xml:lang="en">Cambridge, Mass.: AFIPS</i>, 1962 p. 118.</li>
        <li><a epub:type="footnote" href="#ref_20" id="note_20">[20]</a> et <a epub:type="footnote" href="#ref_21" id="note_21">[21]</a>  <i lang="la" xml:lang="la">ibid.</i> p. 119.</li>
        <li><a epub:type="footnote" href="#ref_22" id="note_22">[22]</a> Une des sociétés les plus dynamiques en matière d’innovation informatique et de réseaux des années 1960.</li>
        <li><a epub:type="footnote" href="#ref_23" id="note_23">[23]</a> <span class="auteur">Licklider</span>, Joseph C. R. <cite lang="en" xml:lang="en">Libraries of the Future</cite>. <i class="droit" lang="en" xml:lang="en">Cambridge, Mass.: <abbr>MIT</abbr> Press</i>, 1965.</li>
        <li><a epub:type="footnote" href="#ref_24" id="note_24">[24]</a> <i lang="la" xml:lang="la">ibid.</i> p2</li>
        <li><a epub:type="footnote" href="#ref_25" id="note_25">[25]</a> <i lang="la" xml:lang="la">ibid.</i> p4</li>
        <li><a epub:type="footnote" href="#ref_26" id="note_26">[26]</a> <i lang="la" xml:lang="la">ibid.</i> p5</li>
        <li><a epub:type="footnote" href="#ref_27" id="note_27">[27]</a> <i lang="la" xml:lang="la">ibid.</i> p5</li>
        <li><a epub:type="footnote" href="#ref_28" id="note_28">[28]</a> <i lang="la" xml:lang="la">ibid.</i> p5</li>
        <li><a epub:type="footnote" href="#ref_29" id="note_29">[29]</a> <i lang="la" xml:lang="la">ibid.</i> p91</li>
        <li><a epub:type="footnote" href="#ref_30" id="note_30">[30]</a> <span class="auteur">Licklider</span>, Joseph C. R. et <span class="auteur">Robert</span> W. Taylor <i class="droit" lang="en" xml:lang="en">« The computer as a communication device »</i> dans <cite lang="en" xml:lang="en">Science and Technology</cite>, 1968.</li>
        <li><a epub:type="footnote" href="#ref_31" id="note_31">[31]</a> <i lang="la" xml:lang="la">ibid.</i> p27</li>
        <li><a epub:type="footnote" href="#ref_32" id="note_32">[32]</a> <i lang="la" xml:lang="la">ibid.</i> p22</li>
        <li><a epub:type="footnote" href="#ref_33" id="note_33">[33]</a> <span class="auteur">Licklider</span>, Joseph C. R., <cite lang="en" xml:lang="en"><a href="http://www.kurzweilai.net/memorandum-for-members-and-affiliates-of-the-intergalactic-computer-network"><i lang="la" xml:lang="la">Memorandum</i> for Members and affiliates of the Intergalactic Computer Network</a></cite>, <i class="droit" lang="en" xml:lang="en">Advanced Projects Research Agency</i>, 1963.</li>
      </ol>
    </aside>

    <section class="figure">
      <h2>Version texte de l’annonce de la démonstration de D. Engelbart en 1968. <a epub:type="footnote" href="#ref-fig1" id="fig1">[figure 1]</a></h2>
      <p lang="en" xml:lang="en">monday afternoon, december 9, 3:45 p.m./arena</p><p>Chairman :DR: D: C: <span class="auteur">Engelbart</span>Stanford Research Institute, Menlo Park, California</p>
      <h3>a research center for augmenting human intellect</h3>
      <p>This session is entirely devoted to presentation by Dr. Engelbart on a computer-based, interactive, multiconsole display system which is being developed at Stanford Research Institute under the sponsorship of ARPA, NASA and <abbr>RADC</abbr>. The system is being used as an experimental laboratory for investigating principles by which interactive computer aids can augment intellectuel capability. The techniques which are being described will, themselves, be used to augment the presentation.</p>
      <p>The session will use an on-line, closed circuit television hook-up to the <abbr>SRI</abbr> computing system in Menlo Park.</p>
      <p>Following the presentation remote terminals to the system, in operation, may be viewed during the remainder of the conference in a special room set aside for that purpose.</p>
    </section>
  </body>
</html>
