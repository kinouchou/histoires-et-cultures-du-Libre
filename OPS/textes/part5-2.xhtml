<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops" xml:lang="fr" lang="fr">
  <head>
    <title>Pure data, logiciel libre de productions créatives</title>
    <link rel="stylesheet" href="../styles/stylesheet.css" type="text/css" />
  </head>
  <body epub:type="bodymatter chapter">
    <h2 id="part5-14" class="titre-chapitre">14 <i lang="en" xml:lang="en">Pure data</i>, logiciel libre de productions créatives</h2>
    <p class="signature">Séverine <span class="auteur">Giordan</span></p>

    <nav id="TOC" epub:type="bodymatter toc" class="epub-toc">
      <ol>
        <li><a href="#part5-14.1"> 14.1 <i lang="en" xml:lang="en">Pure Data</i>, un logiciel de programmation visuelle </a></li>
        <li><a href="#part5-14.2"> 14.2 Dialogue entre scientifiques et artistes </a></li>
        <li><a href="#part5-14.3"> 14.3 Questions de licences </a></li>
        <li><a href="#part5-14.4"> 14.4 La Communauté </a>
          <ol>
            <li><a href="#part5-14.4.1"> 14.4.1 Conventions et dispositifs de coopération </a></li>
            <li><a href="#part5-14.4.2"> 14.4.2 Les espaces de formations </a></li>
          </ol>
        </li>
        <li>
          <a href="#part5-14.5"> 14.5 Les atouts de <i lang="en" xml:lang="en">Pure Data</i> </a>
          <ol>
            <li><a href="#part5-14.5.1"> 14.5.1 Les apports d’une communauté </a></li>
            <li><a href="#part5-14.5.2"> 14.5.2 Une temporalité singulière </a></li>
            <li><a href="#part5-14.5.3"> 14.5.3 Le temps long </a></li>
          </ol>
        </li>
        <li><a href="#part5-14.6"> 14.6 Conclusion </a></li>
      </ol>
    </nav>

    <p> « Pd » acronyme de « <i lang="en" xml:lang="en">Pure Data</i> », encore dénommé « générateur de codes créatifs » ou « mécano cybernétique » <a epub:type="noteref" href="#note_1" id="ref_1"> [1]</a> est présenté aujourd’hui, et dans un sens général, comme un logiciel à programmation graphique pour les créations musicales, multimédias en temps réel. Toutefois, <i lang="en" xml:lang="en">Pure Data </i>s’affranchit largement de cette définition générique. <i lang="en" xml:lang="en">Pure Data </i>est un logiciel libre. Le programme informatique du logiciel est consultable, manipulable par tous. Cette caractéristique a étoffé ses fonctions, redirigé ses pistes de recherche et rendu possibles de nouvelles méthodes, de nouvelles problématiques, de nouvelles applications, provenant des pratiques des utilisateurs. </p>
    <p> Nous chercherons ici à cerner le coefficient utopique de ce logiciel libre : initie-t-il des actions collectives, des mutualisations, des contributions, des relations équilibrées entre concepteurs et utilisateurs constituées à partir des usages ? </p>
    <p> Où se situe <i lang="en" xml:lang="en">Pure Data </i>dans le paysage contrasté des logiciels libres ? Dans un premier temps, l’histoire du logiciel permettra de comprendre son évolution. Puis nous verrons comment des communautés autour du logiciel <i lang="en" xml:lang="en">Pure Data </i>ont émergé. Comment se forment-elles ? Quels sont leurs dynamiques et leur état d’esprit ? Enfin, les atouts de ce logiciel libre seront révélés. Ils éclairent les processus d’émergence et font entrevoir de nouvelles formes de coopérations personnelles ou institutionnelles, voire de solidarités. La diffusion et l’apprentissage de ce logiciel montrent comment de nouvelles économies, des industries créatives même, peuvent apparaître.</p>

    <section epub:type="bodymatter subchapter">
      <h3 id="part5-14.1">14.1 <i lang="en" xml:lang="en">Pure Data</i>, un logiciel de programmation visuelle</h3>
      <p> <i lang="en" xml:lang="en">Pure Data </i>est à l’origine un logiciel de programmation graphique sur un mode visuel ou auditif <a epub:type="noteref" href="#note_2" id="ref_2"> [2]</a>. Un <i lang="en" xml:lang="en">patch</i>, morceau de code qui conduit à la création d’un comportement en temps réel est créé par un ensemble de boîtes <a epub:type="noteref" href="#note_3" id="ref_3"> [3]</a> (fonctions) liées les unes aux autres. Ce langage de programmation non linéaire rappelle les studios électroniques ou encore les synthétiseurs modulaires : « le résultat d’un calcul que vous avez effectué quelque part sera dirigé au moyen d’une connexion vers un module quelconque qui lui-même sera redirigé, vers un autre module etc. » <a epub:type="noteref" href="#note_4" id="ref_4"> [4]</a>. De la sorte, les signaux électriques produits se déplacent de module en module. </p>
      <p> Le graphisme du logiciel est une évocation des programmes modulaires à l’origine des premiers synthétiseurs modulaires analogiques, inventés par Max Mathews, premier directeur scientifique de l’IRCAM à la fin des années 1970. Il s’agit d’un programme orienté objet à la différence de la programmation procédurale plus usuelle. </p>
      <p> Le « programme orienté objet » fonctionne sur un système modulaire. Ce parti-pris favorise l’autonomie de la pluralité des possibilités du logiciel. L’interface graphique de programmation a été pensée par rapport aux utilisateurs qui ne se sont pas forcément initiés à la programmation informatique, et ne les oblige donc pas à coder. Ce type de programmation rend abordable, accessible, ludique et appropriable un domaine de compétences scientifiques et technologiques qui peut sembler hermétique, lorsqu’il est observé du point de vue de l’apprentissage du langage informatique. </p>
    </section>

    <section epub:type="bodymatter subchapter">
      <h3 id="part5-14.2">14.2 Dialogue entre scientifiques et artistes</h3>
      <p> <i lang="en" xml:lang="en">Pure Data </i>est issu de différents projets. Ils se nomment respectivement <i lang="en" xml:lang="en">4X</i>, <i lang="en" xml:lang="en">Pattern</i> <i lang="en" xml:lang="en">Matching</i>, <i lang="en" xml:lang="en">Patcher</i>, <i lang="en" xml:lang="en">Max</i>, <i lang="en" xml:lang="en">Max/<abbr>MSP</abbr> </i>ou <i lang="en" xml:lang="en">JMax</i>… Lors de sa mise au point, il a « voyagé » dans les plus grandes institutions de recherche du monde. L’IRCAM <a epub:type="noteref" href="#note_5" id="ref_5"> [5]</a>, institut de recherches et de créations musicales associé au Centre Pompidou, établissement public à caractère culturel, fut un point de départ. </p>
      <p> La politique de l’IRCAM et certains de ses projets permettent de comprendre l’évolution de ce logiciel. Cette institution a toujours eu un axe majeur spécifique qui est le dialogue entre la recherche scientifique et la création. Ce dialogue a pour vocation de conduire à de nouvelles formes expressives, créatives, nourrissant tout autant les inventions des musiciens que celles des scientifiques. L’IRCAM est très attentif aux liens possibles entre la culture musicale, son histoire, ses formes et les processus scientifiques et technologiques. Les résultats de ces recherches sont appropriés par des processus artistiques et conduisent alors à l’émergence de questionnements nouveaux. Pierre Boulez <a epub:type="noteref" href="#note_6" id="ref_6"> [6]</a>, directeur de l’IRCAM, reproche au <abbr>GRM</abbr> <a epub:type="noteref" href="#note_7" id="ref_7"> [7]</a> (Groupe de Recherche Musicale) d’instrumentaliser les processus artistiques à des fins scientifiques et technologiques. L’élaboration d’outils, de méthodes, de synthèses sonores, de création d’instruments de musiques, d’analyse, de traitements, de transformations du son en temps réel, des dispositifs d’acoustique sonore dans l’espace furent et restent les fruits de cette institution. </p>
      <p> L’IRCAM, afin de répondre à sa politique artistique et culturelle, a choisi dès sa création de prolonger les recherches de Luciano Berio du Studio de phonologie musicale de la RAI à Milan en enrichissant la 4A qui est un empilage d’une soixantaine de calculateurs (1976), émettant de multiples sons de manière autonome, en <i lang="en" xml:lang="en">4X </i>(1978). Cette machine donne la possibilité de varier les paramètres du son en temps réel grâce à la vélocité de calculs de centaines d’oscillateurs. La <i lang="en" xml:lang="en">4X </i>sous la direction technique de Peppino di Giugno, a permis à l’époque de jouer par exemple la pièce sonore « Repons » <a epub:type="noteref" href="#note_8" id="ref_8"> [8]</a> de Pierre Boulez. La vitesse de calcul joue un rôle majeur dans l’évolution et la simulation du suivi en temps réel des comportements instrumentaux, dans l’intégration des phénomènes d’interprétation à la composition musicale et électroacoustique, de l’analyse du signal <a epub:type="noteref" href="#note_9" id="ref_9"> [9]</a>. </p>
      <p> Miller Puckette, résident de l’IRCAM, mathématicien du <abbr>MIT</abbr> <a epub:type="noteref" href="#note_10" id="ref_10"> [10]</a>, travaille en 1985 à un programme nommé <i lang="en" xml:lang="en">Pattern Matching </i>qui assure le recouvrement entre un instrument de musique et une interprétation électronique <a epub:type="noteref" href="#note_11" id="ref_11"> [11]</a> et soutient la cohérence entre les deux jeux. L’application reconnaît les timbres, les hauteurs et les harmonies du soliste, et la « machine » peut suivre ce dernier dans l’évolution de son jeu. De 1986 à 1987, il développe <i lang="en" xml:lang="en">Patcher</i>, qu’il définit en ces termes : « contrôle raffiné des synthétiseurs pour l’exécution <i lang="en" xml:lang="en">live</i> » <a epub:type="noteref" href="#note_12" id="ref_12"> [12]</a>. <i lang="en" xml:lang="en">Patcher</i>, environnement graphique de programmation musicale en temps réel, est l’aboutissement du travail commun du compositeur Philippe Manoury et du mathématicien-programmeur Miller Puckette <a epub:type="noteref" href="#note_13" id="ref_13"> [13]</a>, avec lequel ils créent l’œuvre musicale <cite>Jupiter</cite><a epub:type="noteref" href="#note_14" id="ref_14"> [14]</a>. Il s’agit d’une pièce dont l’environnement informatique (<i lang="en" xml:lang="en">4X</i>, 1986) reconnaît la flûte. Jupiter est la première pièce du cycle <cite>Sonus Ex Machina</cite><a epub:type="noteref" href="#note_15" id="ref_15"> [15]</a>. Philippe Manoury avait suivi un enseignement de la composition musicale assistée <a epub:type="noteref" href="#note_16" id="ref_16"> [16]</a> par ordinateur et avait débuté cette forme de composition avec l’IRCAM au début des années 1980. Dans <cite>Jupiter</cite>, il expérimente l’interaction instrument/machine en temps réel. À cette fin, Philippe Manoury décrit trois types de démarche de composition dans l’interaction instrument/machine : </p>
      <ul>
        <li>La programmation est réalisée antérieurement. En <i lang="en" xml:lang="en">live</i>, la transformation du rythme est envisageable, par contre les événements, le découpage du temps sont fixés. </li>
        <li>Le jeu peut être aussi lié à des calculs probabilistes. </li>
        <li>Les signaux sonores provenant d’entrées Midi <a epub:type="noteref" href="#note_17" id="ref_17"> [17]</a> sont interprétés par la machine.</li>
      </ul>
      <p> La notion d’« interprétation » est alors questionnée à partir de ces nouveaux possibles ; elle intègre les innovations scientifiques et technologiques de Miller Puckette. Par exemple, dans la pièce <a href="http://brahms.ircam.fr/works/work/10493"><cite>Pluton</cite></a> (1988-1989), <i lang="en" xml:lang="en">Patcher </i>donne la possibilité d’étirer les sons. Philippe Manoury expérimente alors notamment les prolongements des sons du piano. La machine capte et collecte une séquence jouée par un pianiste : notes, rythmes, événements sonores, et l’ensemble de ces variables hauteurs, durées, longueurs, dynamiques sont liées à des règles <a epub:type="noteref" href="#note_18" id="ref_18"> [18]</a>. </p>
      <p> <i lang="en" xml:lang="en">Patcher</i>, développé au départ sur la <i lang="en" xml:lang="en">4X</i>, fut ensuite amélioré sur l’<abbr>ISPW</abbr> <a epub:type="noteref" href="#note_19" id="ref_19"> [19]</a>, la Station d’informatique musicale, une machine plus performante. <i lang="en" xml:lang="en">Patcher </i>devient alors Max <a epub:type="noteref" href="#note_20" id="ref_20"> [20]</a> en 1990. Ce n’est plus un programme spécifiquement élaboré pour une seule pièce. Il se présente comme « universel » et le <i lang="en" xml:lang="en">soft</i><a epub:type="noteref" href="#note_21" id="ref_21"> [21]</a> se conforme à toutes pièces musicales. Cependant, le passage entre les deux machines ne se fait pas sans difficulté : toutes les pièces furent recompilées <a epub:type="noteref" href="#note_22" id="ref_22"> [22]</a>. La puissance de calcul des <abbr>PC</abbr> rend alors possible la diffusion du logiciel hors de l’IRCAM et donne l’opportunité de commercialiser le logiciel sous une licence privée IRCAM, ce qui répond aux exigences économiques du centre de recherche <a epub:type="noteref" href="#note_23" id="ref_23"> [23]</a>. </p>
      <p> C’est David Zicarelli, chercheur développant la portabilité du logiciel sur <abbr>PC</abbr> à l’IRCAM, qui est alors responsable de l’entreprise californienne Opcode Systems, elle-même chargée de cette finalité commerciale. Parallèlement, de 1993 à 1994, il travaille à un logiciel complémentaire à Max, le <abbr>MSP</abbr>, un logiciel de synthèse sonore qui, d’une part, analyse et manipule le signal en temps réel sur <abbr>PC</abbr> et, d’autre part, comporte une bibliothèque d’objets (de fonctions) à cet effet. Miller Puckette et David Zicarelli travailleront ensemble pour créer des passerelles entre les deux programmes. </p>
      <p> En 1995 sont élaborés Max/<abbr>FTS</abbr>, Max <abbr>NeXT/X</abbr> par François Déchelle et Maurizio De Cecco, deux nouvelles versions adaptées à la <abbr>ISPW/NeXT/X</abbr>, l’ordinateur propre à l’IRCAM. En 1996, Miller Puckette, alors professeur en musique au département Art et Informatique de l’université de San Diego, participe à l’<abbr>ICMC</abbr> <a epub:type="noteref" href="#note_24" id="ref_24"> [24]</a> avec comme objectif de reconstituer Max. Ce projet est subventionné par le Conseil <i lang="en" xml:lang="en" class="droit">Intel Research</i> pour le <a href="http://www.visualmusic.org"><i lang="en" xml:lang="en" class="droit">Global Music Visual</i></a>. Une version « augmentée » en résulte, elle concède une dimension graphique au logiciel. Cette correspondance du son à l’image était négligée par l’IRCAM. </p>
      <p> La partie graphique a été réalisée par le chercheur Mark Danks. Il programma l’extension externe GEM (Environnement graphique pour le multimédia) qui rend possible la manipulation des flux, des fichiers vidéo, des images fixes, des fichiers 3D en temps réel. Le GEM emploie la technologie de l’Open <abbr>GL</abbr>, très populaire pour les animations 3D ou pour les jeux vidéo. L’Open <abbr>GL</abbr> est une bibliothèque de calculs graphiques à 2 et 3 dimensions. Les musiciens/compositeurs Vibeke Sorensen et Rang Steiner ont également participé à ce projet. La pièce musicale <cite>Lemma</cite><a epub:type="noteref" href="#note_25" id="ref_25"> [25]</a>, qui expérimente le rapport de l’interaction instrument/machine dans un contexte multimédia, est le fruit de cette collaboration. </p>
      <p> Le logiciel <i lang="en" xml:lang="en">Pure Data </i>est le produit de cette longue histoire. En 1998, toujours à l’IRCAM, sous la responsabilité de François Déchelle et Maurizio De Cecco, est réalisée une version libre de Max, JMax (le J de JMax correspond à l’interface Java ajoutée au logiciel), afin de permettre la portabilité du logiciel sur les systèmes d’exploitation libres. </p>
    </section>

    <section epub:type="bodymatter subchapter">
      <h3 id="part5-14.3">14.3 Questions de licences</h3>
      <p> Miller Puckette, qui a réécrit en entier le programme Max sous le nom de <i lang="en" xml:lang="en">Pure Data</i>, a conféré une licence <abbr>BSD</abbr> (<i lang="en" xml:lang="en">Berkeley software distribution license</i>) <a epub:type="noteref" href="#note_26" id="ref_26"> [26]</a> à son logiciel, contrairement à l’IRCAM qui avait attribué une licence privée à Max. L’<i lang="en" xml:lang="en">Open Source Initiative</i> (OSI) <a epub:type="noteref" href="#note_27" id="ref_27"> [27]</a>, défendant les valeurs bénéfiques économiques du logiciel libre, considère cette licence comme adéquate. La Free Software Foundation (<abbr>FSF</abbr>), association qui promeut les vertus sociales et éthiques du logiciel libre, a attesté les licences <abbr>BSD</abbr> version 2 et 3, comme compatibles avec la licence publique générale (<abbr>GPL</abbr>). Cette dernière garantit les libertés fondamentales suivantes : l’emploi du logiciel pour tout usage, la possibilité de consulter le programme du logiciel et de le manipuler selon ses nécessités, la diffusion de copies, le partage de versions modifiées avec la communauté. La version 1 de la Licence <abbr>BSD</abbr> est rejetée par la <abbr>FSF</abbr> pour la clause 4, dite clause de publicité. Cette clause occasionne la <a href="http://www.gnu.org/philosophy/bsd.fr.html">notification de l’ensemble des auteurs et organisations</a> qui ont collaboré à l’écriture des programmes, ce qui est considéré comme une publicité par <abbr>FSF</abbr>. </p>
      <p> Plus exactement, <i lang="en" xml:lang="en">Pure Data </i>est sous la licence <abbr>BSD</abbr> amplifiée. C’est une licence <abbr>BSD</abbr> qui a retiré la clause 4 de sa rédaction. La redistribution et l’usage sous forme de code source ou binaire, modifié ou non, sont soumis aux conditions suivantes : </p>
      <ol>
        <li>Le copyright, la liste des conditions et l’avertissement qui la suit doivent figurer dans le code source redistribué. </li>
        <li>La documentation et/ou les fichiers fournis avec une redistribution sous forme binaire doivent faire apparaître le copyright, la présente liste des conditions et l’avertissement qui la suit. </li>
        <li>Le nom de l’auteur ne saurait être utilisé dans le but de promouvoir ou de légitimer un produit dérivé de ce programme sans autorisation écrite préalable.</li>
      </ol>
      <p> Il s’agit d’une licence claire, concise, simple dans sa rédaction. Elle ne limite aucun usage ; elle est permissive, contrairement à la licence GNU <abbr>GPL</abbr> <a epub:type="noteref" href="#note_28" id="ref_28"> [28]</a>. Elle est compatible avec des licences propriétaires. Les clauses inscrivent le droit d’auteur, la liste des conditions, l’avertissement dans la version modifiée et dans la documentation de la version du code source et l’accord écrit des auteurs et de l’organisme pour l’utilisation de leur auctorialité à des fins de cautionnement scientifique et promotionnelle. </p>
      <p> La licence <abbr>BSD</abbr> n’est toutefois pas choisie par tous les contributeurs développeurs de <i lang="en" xml:lang="en">Pure Data</i>. Ce fut le cas par exemple de la librairie GEM <a epub:type="noteref" href="#note_29" id="ref_29"> [29]</a> (Graphics Environment for Multimedia), qui est sous licence GNU <abbr>GPL</abbr>. Cette librairie a permis à <i lang="en" xml:lang="en">Pure Data </i>d’être un environnement graphique de programmation pour la création multimédia en temps réel donnant libre cours à l’imagination des utilisateurs par rapport à la création et les manipulations d’objet en 3D, de vidéos, d’images, de particules grâce à l’open-GL <a epub:type="noteref" href="#note_30" id="ref_30"> [30]</a>. La licence GNU <abbr>GPL</abbr> applique le <a href="http://fr.wikipedia.org/wiki/Copyleft"><i lang="en" xml:lang="en">copyleft </i></a>c’est-à-dire une protection de la qualité de logiciel libre. </p>
      <p> Le logiciel <i lang="en" xml:lang="en">Pure Data </i>possède des librairies dans lesquelles l’amateur trouve des « objets » qui lui donnent des outils de création. L’« objet » <i lang="en" xml:lang="en">[expr~]</i>, réalisé par Aymeric Mansoux, Chun Lee et Olivier Laruelle, sous le nom du collectif 0XA <a epub:type="noteref" href="#note_31" id="ref_31"> [31]</a> qui permet la composition de sons 8 bits, a été édité sous la LAL, Licence Art Libre. Les logiciels, les programmes informatiques sont ici compris comme des œuvres de création, ce qui explique l’utilisation de cette licence <a epub:type="noteref" href="#note_32" id="ref_32"> [32]</a> qui fut créée à partir d’une liste de diffusion (Copyleft_attitude@april.org) et lors des rencontres Copyleft Attitude <a epub:type="noteref" href="#note_33" id="ref_33"> [33]</a>. La Licence Art Libre stipule la possibilité de diffuser, de copier, de transformer, d’exploiter gratuitement ou commercialement une œuvre à la seule condition de rendre accessible l’original, la matrice du produit dérivé. Les personnes utilisant l’objet <i lang="en" xml:lang="en">[expr~] </i>sont sous le joug de la LAL, attestée par la GNU <abbr>GPL</abbr>. Or, malgré les différences des licences des extensions de Pure Data, lorsque le logiciel est exécuté, seule la licence <abbr>BSD</abbr> apparaît. </p>
      <p> Miller Puckette conserve le contrôle de l’expansion du noyau du logiciel, c’est-à-dire la partie qui effectue les programmes de base du logiciel. Il maîtrise également les lignes directrices fortes : la fiabilité du logiciel, l’amélioration du temps réel de celui-ci, l’enrichissement de la reconnaissance du signal de la voix et la charte graphique <a epub:type="noteref" href="#note_34" id="ref_34"> [34]</a>. Andrea Mayr dans l’article « <i lang="en" xml:lang="en">Pd as Open Source Community</i> » <a epub:type="noteref" href="#note_35" id="ref_35"> [35]</a> explique que la légitimité auctoriale du logiciel se trouve dans les qualités de création des programmes, de documentations et de communication des développeurs, ce qui explique l’aura dominante de Miller Puckette <a epub:type="noteref" href="#note_36" id="ref_36"> [36]</a>. Pourtant, cette autorité non négociée a des limites : des versions différentes DesireData ou Pd-l2Ork sont apparues, prétendant apporter une amélioration des programmes liés aux programmes de base. De plus, certains programmeurs contribuent désormais non plus à <i lang="en" xml:lang="en">Pure Data </i>mais à d’autres logiciels de programmation en temps réel comme SuperCollidor ou vvvv. </p>
    </section>

    <section epub:type="bodymatter subchapter">
      <h3 id="part5-14.4">14.4 La Communauté</h3>
      <h4 id="part5-14.4.1">14.4.1 Conventions et dispositifs de coopération</h4>
      <p> Lors d’une résidence à l’<abbr>IEM</abbr> (Institut de musique acoustique et électronique) de Graz en Autriche à la fin des années 1990 avec certains étudiants et chercheurs de cette formation, Miller Puckette a lancé les « catalyseurs » de la communauté. Ils ont produit tour à tour une liste de diffusion, un <a href="http://puredata.info">wiki</a>, un <a href="http://pdstatic.iem.at/externals-HOWTO">guide</a> donnant la marche à suivre pour enrichir le logiciel <a epub:type="noteref" href="#note_37" id="ref_37"> [37]</a> et un <abbr>IRC</abbr> (<i lang="en" xml:lang="en" class="droit">Internet Relay Chat</i>). Ces outils facilitent la coopération entre développeurs et simples amateurs de <i lang="en" xml:lang="en">Pure Data</i>. </p>
      <p> Ces dispositifs sont toujours opérants et, avec le temps, ils rassemblent une communauté importante comportant de nombreuses nationalités. Depuis lors, d’autres forums ont émergé. Ils ont pour objectif principal de mettre en relation les utilisateurs de ce logiciel à partir d’une communauté géographique ou de langues <a epub:type="noteref" href="#note_38" id="ref_38"> [38]</a>. </p>
      <p> L’<abbr>IEM</abbr> à l’origine de la liste de diffusion est également à l’origine de la première <cite>Convention </cite>tenue à Graz, en 2004. Ces conventions comportent des conférences, des séminaires, des tables rondes, des ateliers, des <i lang="en" xml:lang="en">works in progress</i>, des expositions, des performances et des concerts. Chaque convention est spécifique ; elle est à l’image de l’équipe d’accueil. La convention de 2007 à Montréal, <cite>L’œuvre ouverte</cite>, s’est donnée comme ambition, outre le dialogue entre utilisateurs, développeurs et théoriciens, novices et spécialistes, de développer les points suivants : </p>
      <ul>
        <li>mobiliser la création artistique qui emploie les logiciels libres ; </li>
        <li>questionner la diffusion et la distribution libre ; </li>
        <li>cerner les aspects esthétiques et politiques de la culture du logiciel libre ; </li>
        <li>montrer les pratiques ancrées dans une approche multidisciplinaire ; </li>
        <li>mettre en lumière les structures locales de créations à partir du libre ; </li>
        <li>intensifier les échanges entre domaines hétérogènes.</li>
      </ul>
      <p> Toutes les conventions (Graz, 2004 ; Montréal, 2007 ; Sao Paulo, 2009 ; Weimar - Berlin, 2011) sont documentées par les écrits des interventions, des photographies, récemment des vidéos. L’<abbr>IEM</abbr> a publié les actes de la première convention <a epub:type="noteref" href="#note_39" id="ref_39"> [39]</a>. </p>
      <p> Par ailleurs, la communauté s’appuie sur des espaces et des événements où les utilisateurs se forment et se rencontrent. </p>

      <h4 id="part5-14.4.2">14.4.2 Les espaces de formations</h4>
      <h5>Labs et friches culturelles.</h5><p> De nouveaux lieux culturels (hacklabs, friches culturelles, espaces de co-working, associations de logiciel libre) proposent des ateliers <i lang="en" xml:lang="en">Pure Data</i>. Ces espaces de création sont très singuliers du fait qu’ils sont issus des acteurs qui les composent, de l’espace géographique auquel ils appartiennent. Ces espaces inventent leurs propres grammaires ancrées dans un contexte socio-politique culturel contemporain. Ils ne copient ni les centres d’animation municipaux, ni les centres d’art contemporains ouverts dans « les années 1980 ». Il n’y a pas véritablement de politique stricte qui les unit. Les notions d’émancipation, d’épanouissement personnel et collectif ne sont pas suffisantes pour les décrire. Certains se distinguent par la volonté d’auto-gestion, d’autonomie, d’autres la promotion de la création émergente, de la sensibilisation des publics à la culture informatique et technique, aux questionnements politiques, éthiques qui leur sont liés. Espaces ouverts, d’échanges, de débats, ils « travaillent » à reconstruire les bases du « vivre-ensemble » autour d’une « création émergente » par la prise de parole de chacun. Ils participent à l’essor de l’innovation, accompagnant des démarches associatives, entrepreneuriales d’industrie créative, de développement durable ou de simple développement personnel intégré à une démarche collective. Des espaces mis à disposition où des individus partagent des intérêts communs et développent des projets collectifs. Les formations peuvent être gratuites ou rémunérées. Les formations ou les rencontres sont orchestrées par des artistes ou les membres de ces espaces. Le dialogue autour de questions artistiques, esthétiques, politiques, économiques, sociales, philosophiques en est largement favorisé, dépassant le seul apprentissage technique du logiciel. L’apprentissage est dynamisé par les projets des auditeurs. Les projets sont mutualisés, mis en partage lors d’événements. </p>
      <h5>Les festivals.</h5><p> Une sensibilisation à <i lang="en" xml:lang="en">Pure Data </i>peut se dérouler aussi lors de festivals éponymes. Ces festivals promeuvent et diffusent la création contemporaine, et notamment les créations liées au numérique. C’est l’occasion alors de faire découvrir les outils, les processus utilisés par les artistes. Le logiciel libre employé par les artistes montre les potentia-lités d’échanges entre artistes, créateurs et grand public et les questions citoyennes qui y sont attachées. La défense des logiciels libres conduit à déplacer des acteurs internationaux pour un événement local. Les spécialistes, les experts se mêlent au grand public. Des générations, des classes socio-professionnelles hétérogènes se rassemblent, dépassant leurs motivations divergentes. Ces festivals contribuent à développer des pratiques amateurs comme professionnelles. C’est aussi un moyen de promouvoir des ateliers sur le long terme, fidéliser des publics, acquérir de nouveaux publics, jauger la popularité de ces pratiques et les capacités à combiner et développer une activité sociale, culturelle, citoyenne et économique autour d’elles. </p>
      <h5>Les universités.</h5><p> L’apprentissage des logiciels libres dans certaines universités n’est toujours pas la règle en 2012. Ceci est justifié par le fait que le monde du travail emploie majoritairement des logiciels propriétaires. <i lang="en" xml:lang="en">Pure Data</i>, pour son usage très spécifique est cependant enseigné dans les universités ou écoles d’art françaises. Les professeurs de Pure Data ont des sites qui contiennent le contenu de leurs cours ouverts à la fois à leurs étudiants et aux internautes. Douglas Edric Stanley, professeur d’Arts numériques à l’école supérieure d’art d’Aix-en-Provence a écrit que son action pédagogique en ligne converge avec l’esprit de l’informatique et d’internet issu de la contre-culture <a epub:type="noteref" href="#note_40" id="ref_40"> [40]</a> : </p>
      <blockquote> Ils sont également le témoignage d’un esprit de partage de l’atelier, d’une promesse de communauté, et d’une revendication : la <a href="http://www.ecole-art-aix.fr/rubrique11.html">programmation est une forme de résistance.</a></blockquote>
      <h5>Les projets issus de <i lang="en" xml:lang="en">Pure Data</i>.</h5><p> La communauté <i lang="en" xml:lang="en">Pure Data </i>est extrêmement diverse et rassemble des projets très hétéroclites. Elle fédère différents types d’utilisateurs ayant des degrés hétérogènes de participation et issus de formations, de professions différentes : musiciens, artistes, scientifiques, créateurs numériques, développeurs soutenus ou appartenant à une institution de formation (professeurs et étudiants) ou entrepreneuriale. En 2004, dans une étude de la communauté <i lang="en" xml:lang="en">Pure Data </i>à partir d’une liste de diffusion, <a href="http://puredata.info/groups/pd-graz/label/book pd as Open Source Community">Andrea Mayr</a> dévoile qu’une partie des contributeurs de <i lang="en" xml:lang="en">Pure Data </i>se rémunère de cette activité. </p>
      <p> Les Conventions sont le moment de découvrir les créations <i lang="en" xml:lang="en">Pure Data </i>les plus évoluées d’un point de vue scientifique, technique, artistique, social, de l’innovation, pédagogique. Les productions les plus lourdes d’un point de vue de la programmation sont des indépendants ou des chercheurs qui enrichissent le logiciel, en développant de nouvelles librairies. Certains développeurs mettent en scène leurs créations. Leurs productions sont souvent mises en accès sur des sites de gestion et d’hébergement de fichiers comme SourceForge, Gitorious, Github… </p>
      <p> <i lang="en" xml:lang="en">Pure Data </i>est désormais employé dans de nombreux domaines artistiques : théâtre, danse, Vjing, musique, installation, art sonore, performance, art des nouveaux médias, vidéo… Le code créatif dépasse largement cette sphère, touchant autant aux sphères scientifiques, d’innovations, que les projets pédagogiques. L’ensemble de ces producteurs échangent des patchs, c’est-à-dire des programmes inventés à travers les plates-formes d’hébergement de programmes, des wikis ou leurs propres sites internet. </p>
      <p> Certaines des expériences créatives sont filmées et partagées via le site <i lang="en" xml:lang="en">Pd-Community Site </i>ou à partir d’une chaîne du réseau social de vidéos réalisées par les internautes : Viméo, You Tube ou Daily Motion. Voici quelques exemples de ces créations : les performances des hommes orchestres, <a href="http://www.uni-weimar.de/medien/wiki/PDCON:Concerts/Dan\_Wilcox">Dan Wilcox</a>  ou <a href="http://www.uni-weimar.de/medien/wiki/PDCON:Concerts/Onyx\_Ashanti">Onyx Ashanti</a>. Le « <i lang="en" xml:lang="en" class="droit">cowboy robot</i> », Dan Wilcox, joue de la guitare. Ces riffs sont traités à partir d’algorithmes en temps réel liés à une interaction visuelle qui se déploie sur son masque écran. Onyx Ashanti danse et joue de la funk à partir d’un micro-synthétiseur, un saxophone dématérialisé, une sorte de boîte à rythme. Trois capteurs analysent le mouvement, le souffle, les pressions. Ces informations sont reliées à un laser vert-fluo, attachés à son corps. Ces deux artistes donnent accès aux documentations de leur projet artistique et les rendent libres. </p>
      <p> <a href="http://onyx-ashanti.com">Iohannes Zmölnig </a> délivre intentionnellement son code dans des performances de <i lang="en" xml:lang="en">live-coding</i>. Il s’agit d’une performance basée sur l’improvisation et la programmation informatique où l’écran d’ordinateur du développeur est montré à tous <a epub:type="noteref" href="#note_41" id="ref_41"> [41]</a>, dévoilant alors le fonctionnement, la logique informatique de ce qui est entendu. </p>
      <p> Les projets artistiques réalisés avec <i lang="en" xml:lang="en">Pure Data </i>peuvent être engagés politiquement, en donnant par exemple un regard caustique sur les mécanismes de la finance. Les installations du collectif <abbr><a href="http://www.rybn.org">RYBN</a></abbr> <a epub:type="noteref" href="#note_42" id="ref_42"> [42]</a>, les robots traders du projet AntiDataMining, à partir d’algorithmes et de logiciels reconstituent les technologies de transaction en temps réel, en continu et modélisent les fluctuations boursières comme « contrôleurs de hasard ». Elles mettent ainsi le doigt sur les dysfonctionnements de l’économie mondiale. </p>
      <p> D’un autre côté, ces pratiques artistiques tentent de pousser le logiciel jusqu’à ses retranchements technologiques. Le collectif CHDH réalise des performances synesthésiques se développant à travers des instruments audiovisuels. Deux étapes composent son travail : la création d’instruments, puis leur apprentissage. Les participants créent des algorithmes qu’ils mettent en œuvre dans les matières sonores et audiovisuelles. Leur esthétique se déploie au travers du mouvement, en explorant, développant les potentiels et limites du logiciel <i lang="en" xml:lang="en">Pure</i> <i lang="en" xml:lang="en">Data</i>. </p>
      <p> La création issue de ce logiciel libre est diverse. Le fait que ce logiciel soit libre donne des voies qui sont singulières à cette création : la documentation, la transparence des programmes informatiques inventés, une volonté de <em>performer </em>le logiciel, une forme d’activisme au contexte socio-politique. </p>
      <h5>Les projets appliqués.</h5><p> Il existe par ailleurs des projets qui télescopent actuellement <i lang="en" xml:lang="en">Pure Data </i>dans les nouveaux circuits des nouvelles industries culturelles : logiciels de musique, jeux vidéo, applications pour mobiles. Ces usages permettent de sortir des petits cercles fermés de pratiques pour atteindre le grand public. </p>
      <p> Katja Vetter a créé deux logiciels de musique, Instant Decomposer et Slice-Jockey, téléchargeables gratuitement <a href="http://www.katjaas.nl">sur son site</a> et présentés avec une documentation ludique sur les concepts scientifiques et techniques interpellés. Le jeu vidéo Spore (action, stratégie et jeu de rôle), dont le thème est le développement des espèces dans l’univers <a epub:type="noteref" href="#note_43" id="ref_43"> [43]</a>, ou l’application <abbr>RJDJ</abbr> (<i lang="en" xml:lang="en" class="droit">Jockey Reality</i>), jeu d’expérimentations sonores pour I Phone et Androïd, intègrent un environnement <i lang="en" xml:lang="en">Pure Data</i>. </p>
      <p> <i lang="en" xml:lang="en">Pure Data </i>se lie encore à des programmes écrits en Java, Objective-C, Python avec la Libpd. Il est cité dans les sites de réalisation de robots amateurs. Il est ainsi employé pour contrôler des directions ou pour saisir les images de la webcam porté par son robot. Dans ce type d’application, <i lang="en" xml:lang="en">Pure Data </i>rend la programmation <a href="http://letsmakerobots.com/node/6815">très rapide</a>. </p>
      <h5><i lang="en" xml:lang="en">Pure Data</i>, la recherche et les projets pédagogiques.</h5><p> Bien sûr, <i lang="en" xml:lang="en">Pure Data </i>continue à être employé dans la recherche scientifique musicale, ce pour quoi il a été créé. Miller Puckette œuvre toujours au projet initial : la réalisation de partitions se dessinant en temps réel. Il prolonge par cette démarche les intuitions des compositeurs Iannis Xenakis ou Arnold Schönberg sur la question <a epub:type="noteref" href="#note_44" id="ref_44"> [44]</a>. </p>
      <p> Dans la recherche en audiovisuel, <i lang="en" xml:lang="en">Pure Data </i>permet de rendre compte de la variété des traitements que l’on peut effectuer sur un signal audiovisuel <a epub:type="noteref" href="#note_45" id="ref_45"> [45]</a>. </p>
      <p> Le laboratoire de l’université de Sheffield, travaillant sur l’interaction homme-machine à propos de la communication orale, emploie <i lang="en" xml:lang="en">Pure Data </i>pour simuler des comportements oraux animaux. <i lang="en" xml:lang="en">Pure Data </i>est reconnu pour sa vitesse de calcul et donc la qualité de la simulation du temps réel. Les discours paralinguistiques sont remarquables chez tous les êtres vivants, <i lang="en" xml:lang="en">Pure Data </i>permet de les simuler. </p>
      <p> <i lang="en" xml:lang="en">Pure Data </i>a été employé pour développer des projets pédagogiques sensibilisant le public à la pratique créative numérique. La Valise Pédagogique Création Interactive <a epub:type="noteref" href="#note_46" id="ref_46"> [46]</a> ou La MIAM, la mallette interactive artistique multimédia, en sont des exemples. Dans un premier cas, La Valise Pédagogique Création Interactive rassemble du matériel technique, logiciel et documentaire pour la formation à la création au sens large à partir des technologies en temps réel. Elle est modulable en tant qu’outil de création pour de nombreux projets éducatifs, ou en tant que cadre d’apprentissage pour un atelier d’initiation. Dans le second cas, la mallette pédagogique <a epub:type="noteref" href="#note_47" id="ref_47"> [47]</a> MIAM est un ordinateur doté de l’ensemble des périphériques pour la création numérique avec webcams, capteurs, joysticks, wiimotes, cartes Arduino et possédant des ressources numériques pour aborder l’art numérique et son histoire. </p>
      <p> <i lang="en" xml:lang="en">Pure Data </i>est aussi employé pour sensibiliser à la synthèse sonore des enfants de premier et second cycle, par la confection d’habits interactifs <a epub:type="noteref" href="#note_48" id="ref_48"> [48]</a>. </p>
      <p> <i lang="en" xml:lang="en">Pure Data </i>est utilisé de prime abord non en tant que logiciel libre mais en tant que logiciel de programmation graphique ou de programmation musicale. Son accès libre donne la possibilité aux institutions associatives, éducatives et aux auditeurs de se doter aisément de cet outil. Sa qualité de logiciel libre initie indirectement à la mise en commun, à la mutualisation du savoir et questionne la nature des biens informationnels. </p>
    </section>

    <section epub:type="bodymatter subchapter">
      <h3 id="part5-14.5">14.5 Les atouts de <i lang="en" xml:lang="en">Pure Data</i></h3>
      <p> L’atout majeur de <i lang="en" xml:lang="en">Pure Data </i>est sa communauté. Elle lui confère un facteur déterminant de durée de vie pour un logiciel ; en permanence celui-ci est complété, renouvelé grâce aux usages. Il permet de multiples expériences temporelles, ce qui lui confère une originalité sans concurrence. </p>

      <h4 id="part5-14.5.1">14.5.1 Les apports d’une communauté</h4>
      <p> Très tôt au début des années 1990, l’IRCAM a créé un forum, afin de rassembler des compositeurs, chercheurs, enseignants du monde entier autour de leurs productions. Le forum démontrait « le caractère international de l’IRCAM » <a epub:type="noteref" href="#note_49" id="ref_49"> [49]</a>. En 1994, l’IRCAM prend l’initiative d’une version similaire à MAX/MSP libre, Jmax <a epub:type="noteref" href="#note_50" id="ref_50"> [50]</a>, environnement de programmation graphique pour créations multimédias et musicales en temps réel, premier logiciel libre de l’IRCAM (soumis à la licence <abbr>GPL</abbr> en 1999). Reposant sur le travail de Miller Puckette, il fut mis en libre accès et développé par l’équipe Systèmes temps réel, sous le contrôle de François Déchelle. L’intérêt de l’IRCAM pour un tel développement était la diffusion indirecte de ses logiciels propriétaires, le rassemblement de bêta-testeurs bénévoles, l’émergence d’idées prolongeant le projet et surtout la portabilité de ce logiciel vers des systèmes d’exploitation libres. Jmax fut le logiciel le plus téléchargé de l’IRCAM, cependant le projet s’acheva en 2002, Jmax rassemblait une communauté de développeurs et utilisateurs inférieure à ses concurrents <a epub:type="noteref" href="#note_51" id="ref_51"> [51]</a> pour pouvoir se développer. </p>
      <p> Autour de <i lang="en" xml:lang="en">Pure Data </i>gravite une imposante communauté composée à la fois de développeurs et d’utilisateurs. Les premiers créent de nouveaux « objets » dans une multitude de domaines ou contribuent à améliorer sans cesse le fonctionnement général du logiciel. Les seconds l’utilisent dans de multiples cadres artistiques liés, entre autres, à la performance musicale et audiovisuelle ainsi qu’aux installations interactives. En permanence, ce logiciel libre est ainsi enrichi et adapté à toutes sortes de recherches ou productions. </p>
      <p> Le privé a compris à quel degré la contribution entre les utilisateurs et développeurs enrichit les logiciels. Dans le cas de Max 6 sous licence privée IRCAM, dernière version privée similaire à <i lang="en" xml:lang="en">Pure Data</i>, la société Cycling 74 vante sa communauté, sa documentation importante, ses tutoriels de formation, ainsi que l’échange avec des modérateurs actifs et des développeurs au service des besoins des utilisateurs, pouvant réagir très efficacement lorsqu’un bug est débusqué par un utilisateur. Une importante communauté d’utilisateurs et de développeurs gravite autour de Max 6 : la collaboration consistant essentiellement à s’échanger des <i lang="en" xml:lang="en">patchs</i>, donner son avis sur des améliorations techniques du logiciel, signaler des bugs techniques. En outre l’entreprise fait valoir ses créateurs et les promotionne. Max/<abbr>Msp</abbr> agrandit sa communauté en créant des extensions avec d’autres logiciels. Max coopère actuellement avec Ableton Live, logiciel séquenceur musical pour la composition et l’arrangement, en temps réel, très populaire dans l’électro mondial porté par la scène berlinoise. </p>

      <h4 id="part5-14.5.2">14.5.2 Une temporalité singulière</h4>
      <p> Miller Puckette et Mark Danks ont décloisonné <i lang="en" xml:lang="en">Pure Data </i>en re-développant celui-ci avec des atouts multimédias à la fin des années 1990. Des contributeurs éclairés ont largement affiné depuis cette technologie. Après avoir observé l’engouement de la communauté <i lang="en" xml:lang="en">Pure Data </i>pour la possibilité de programmer en temps réel du graphisme, des animations avec une technologie Open<abbr>GL</abbr> <a epub:type="noteref" href="#note_52" id="ref_52"> [52]</a>, Max s’est pourvu de l’extension Jitter pour pallier à ce manque. Sa qualité de logiciel libre a donné au logiciel d’interaction instrument/machine en temps réel une nouvelle dimension, à partir non d’un programme de recherche, mais d’usages. </p>
      <p> Pour Miller Puckette, il existe un hiatus entre l’outil réalisé par un développeur, une équipe de concepteurs et les personnes qui l’emploient, il en résulte un déséquilibre entre les offres et les demandes. Le « logiciel » comme l’exprime Miller Puckette inscrit la démarche, le cheminement, les conceptions de celui qui le réalise. « Que le développeur le veuille ou non, le logiciel se fait irrémédiablement le reflet de sa mentalité et de sa personnalité. » <a epub:type="noteref" href="#note_53" id="ref_53"> [53]</a> <i lang="en" xml:lang="en">Pure Data</i>, en tant qu’œuvre ouverte, rend possible des renversements d’usage entre concepteurs et utilisateurs. Ce basculement encourage à dépasser les frontières entre les domaines de savoirs, jusqu’à une indifférenciation des rôles entre utilisateurs et concepteurs. </p>

      <h4 id="part5-14.5.3">14.5.3 Le temps long</h4>
      <p> Ce logiciel libre n’ayant aucune pression en termes de rentabilité, les versions évoluent de manière homogène, en permettant d’implémenter des patchs issus de versions précédentes sur des versions récentes ; au contraire des versions propriétaires qui modifient le plus souvent les interfaces et les modalités suscitant ainsi la commercialisation du nouveau produit, déclare Miller Puckette <a epub:type="noteref" href="#note_54" id="ref_54"> [54]</a>. De nombreuses autres possibilités prennent corps avec ce type de logiciel, comme celles pour ces œuvres numériques de se propager et ainsi de ne pas disparaître. Une des conditions de la conservation des fichiers Pure Data est leur utilisation <a epub:type="noteref" href="#note_55" id="ref_55"> [55]</a> ; ceux-ci peuvent être joués, consultés et remixés <a epub:type="noteref" href="#note_56" id="ref_56"> [56]</a>. Cette conservation est particulière, elle se rapproche des processus de la mémoire humaine ; elle est liée à l’usage et à la multiplication des points de vue sur une même source. De plus elle offre un espace d’expressions des points de vue de chacun. On peut voir l’exemple illustratif de la fondation Daniel Langlois qui se focalise sur la documentation et la conservation du patrimoine des arts médiatiques en mettant en place un site participatif ciblant les artistes, mais également les témoins des pratiques. La clé de la mémoire de ces œuvres est d’« instaurer un dialogue à plusieurs voix entre les différents acteurs concernés <a epub:type="noteref" href="#note_57" id="ref_57"> [57]</a>». C’est pourquoi le logiciel libre, celui qui donne une ouverture totale et complète à ses sources, avec l’aide de forums et d’espaces présentiels à sa pratique, est la condition nécessaire et maximale à l’expérience du temps long pour des œuvres numériques. </p>
    </section>

    <section epub:type="bodymatter subchapter">
      <h3 id="part5-14.6">14.6 Conclusion</h3>
      <p> <i lang="en" xml:lang="en">Pure Data </i>repose sur de nombreux concepts et conventions mathématiques et informatiques ; il nécessite un niveau non négligeable de techni-cité dès qu’un projet, même le plus anodin, se déploie. Toutefois, par l’utilisation de ce logiciel, par sa communauté ou par ses productions créatives, les profanes sont entraînés dans un territoire scientifique, technologique, épistémologique ou artistique et esthétique pour lequel ils éprouvaient de l’indifférence, de l’ignorance, du mépris ou des complexes. Sa programmation, via une interface graphique, rend même l’apprentissage ludique, attrayant et sa simplicité d’usage accélère le processus créatif. </p>
      <p> <i lang="en" xml:lang="en">Pure Data </i>est autant une sensibilisation aux sciences, aux technologies, qu’aux travaux de recherche. Les pièces de Philippe Manoury à la fin des années 1980 avec <i lang="en" xml:lang="en">Patcher </i>jusqu’aux travaux actuels de <abbr>CHDH</abbr> à partir du GEM sont de cet ordre. Ces travaux sont l’alchimie de deux territoires, art et science, sans qu’il y ait instrumentalisation de l’un par l’autre. </p>
      <p> L’apprentissage de ce logiciel est l’expérience d’un processus d’entraide, de solidarité issu des forums, de l’expérience de travail en commun sans organisation hiérarchique. <i lang="en" xml:lang="en">Pure Data </i>est aussi un moyen de réunir des personnes aux parcours, aux représentations, aux valeurs, aux objectifs hétéroclites. Son initiation conduit inévitablement à questionner l’environnement numérique contemporain et passé, à éveiller à des problématiques économiques, politiques, sociales, éthiques le concernant. L’apprentissage d’un média est l’occasion de donner un langage, une grammaire conférant une forme, une articulation à une parole spécifique. Elle est la voie de l’émancipation, et de la possibilité d’expression, de délibération de construction du commun, de conversations dépassant un territoire national ou de langues. </p>
      <p> Cependant le degré technique à acquérir ne finit-il pas par enfermer les joueurs de <i lang="en" xml:lang="en">Pure Data </i>dans la répétition de figures imposées, sans qu’ils puissent s’en affranchir ? Ou au contraire donne-t-il la possibilité aux auteurs de propager, disséminer le contre-pouvoir de la participation directe vers des interlocuteurs ? On observe à quel point ce logiciel est lié aux institutions publiques, à la passion de ses salariés, à ses structures associatives qui créent du bien commun, défendent l’intérêt général. Cette programmation qui donne lieu à de multiples applications <i lang="en" xml:lang="en" class="droit">Low Tech</i>, conduit à un jeu ludique entre les universités du monde autour de l’interaction instrument/machine du temps réel, des technologies Open <abbr>GL</abbr>, ses applications sur les écrans mobiles, son imbrication avec d’autres langages de programmation. D’ailleurs l’interopérabilité est l’une des préoccupations majeures du logiciel libre. La librairie libpd permettant son interopérabilité avec de nombreux langages de programmation informatique montre que <i lang="en" xml:lang="en">Pure Data </i>conscientise sa qualité de logiciel libre. </p>
      <p> Apprendre un langage, une logique propre à <i lang="en" xml:lang="en">Pure Data </i>ne détourne-t-il pas de même les citoyens des langages informatiques usuels et ne les absorbe-t-il pas dans une zone réduite de l’informatique, l’informatique artistique ? La réponse à cette question trouve sa clé dans les objectifs pédagogiques des passeurs. L’artiste Katja Vetter documente par exemple ses travaux en rappelant les concepts mathématiques et physiques présents dans <i lang="en" xml:lang="en">Pure Data</i>, à l’intérieur de ces propres <i lang="en" xml:lang="en">patchs</i>, le cheminement intellectuel suivi pour créer ces <i lang="en" xml:lang="en">patchs </i>jusqu’à la création de ses logiciels, outils pour des œuvres sonores et multimédias. Katja Vetter appartient à ces artistes qui créent leurs outils pour produire leurs créations, qui documentent finement leurs processus techniques, qui partagent leurs outils. Étrangement, elle n’exprime pas son parcours esthétique et artistique qui la conduit à cette démarche. La diffusion du logiciel <i lang="en" xml:lang="en">Pure Data </i>montre que les outils du libre sont le support de nombreuses dynamiques : dynamique de recherche, de projets pédagogiques, de créations numériques, des industries créatives. </p>
      <p> Il est très difficile de faire une prospection sur le devenir de ce logiciel, de son évolution. Le temps réel est pour l’instant à un point très avancé. Le temps réel est désormais travaillé jusqu’à un point où la perception humaine ne le remarque plus. Toutefois dans le cas de <i lang="en" xml:lang="en">Pure Data</i>, il peut être affiné pour des usages comme le jeu vidéo ou la captation de la voix humaine. </p>
      <p> Le logiciel, même s’il ne s’organise pas sur un principe démocratique à ce jour est accompagné de nouveaux lieux de la culture qui ont des objectifs sociaux, politiques et non plus seulement une prétention esthétique sans instances de critiques. Culture active, actrice, lieu d’apprentissage, des lieux névralgiques de rencontres, de dynamiques économiques, de circulation, de courants de pensée contemporains, de transmission, d’expérimentation de la démocratie directe, peu nombreuses en France contrairement à d’autres pays européens. Les pouvoirs publics n’ont pas encore réalisé et massifié l’élan que ces lieux pouvaient offrir en terme de citoyenneté, de responsabilité, de transformation des consciences. Le logiciel libre <i lang="en" xml:lang="en">Pure Data </i>est un modèle d’organisation et de gestion des biens informationnels. Cependant si les modalités d’appropriation ne sont pas conscientisées, si le fonctionnement des structures qui proposent des rencontres ou ateliers <i lang="en" xml:lang="en">Pure Data </i>ne sont pas proches des processus organisationnels inspirés du logiciel libre au sens général du terme, les contributeurs ne seraient-ils pas instrumentalisés, en les positionnant comme consommateurs dans un contexte « <i lang="en" xml:lang="en" class="droit">do it yourself</i> », pour conduire <i lang="en" xml:lang="en">in fine </i>à l’altération des coopérations, des mutualisations, de l’entraide, de l’élan créatif autour des technologies ?</p>
      <hr />
      <p> Je remercie l’ensemble des acteurs de la formation <i lang="en" xml:lang="en" class="droit">Pure Data</i> du CRAS proposée par <i lang="en" xml:lang="en">Mains d’ œuvres </i>(Jean-Marie Boyer, Cédric Buron, Christian Delecluse, Agnès Le Foulgoc, Jean-Yves Gratius, Joseph Jaouen et tout particulièrement Pascale Gustin) ainsi que toute l’équipe de Framasoft. </p>
    </section>

    <aside epub:type="footnotes" class="epub-footnotes">
      <ol>
        <li> <a epub:type="footnote" href="#ref_1" id="note_1">[1]</a> Voir Roland <span class="auteur">Cahen</span>, présentation Jérôme <span class="auteur">Abel</span> <a href="http://impala.utopia.free.fr/pd/patchs/PureData_Initiation_fr.pdf">PureData_Initiation_fr.pdf</a>.  </li>
        <li> <a epub:type="footnote" href="#ref_2" id="note_2">[2]</a> <span class="auteur">Pachet</span>, François et Jean-Pierre <span class="auteur">Briot</span>, éds., <cite>Informatique musicale : Du signal au signal musical</cite>, Paris : Hermès, 2004, p. 21.  </li>
        <li> <a epub:type="footnote" href="#ref_3" id="note_3">[3]</a> Des « objets », qui sont l’instance de classe, c’est-à-dire l’instance de données et de manipulateurs de données.  </li>
        <li> <a epub:type="footnote" href="#ref_4" id="note_4">[4]</a> Voir Archives IRCAM, <cite>Manuel Max</cite>, p. 1.  </li>
        <li> <a epub:type="footnote" href="#ref_5" id="note_5">[5]</a> Institut de Recherche et de Coordination Acoustique / Musique.  </li>
        <li> <a epub:type="footnote" href="#ref_6" id="note_6">[6]</a> Compositeur, chef d’orchestre. Directeur de l’IRCAM de 1977 à 1992.  </li>
        <li> <a epub:type="footnote" href="#ref_7" id="note_7">[7]</a> Pierre Boulez emploie l’expression « bricolage empirique » pour qualifier les expérimentations du <abbr>GRM</abbr>. Voir <span class="auteur">Grynszpan</span>, Emmanuel, « Confluence et divergences. La techno face aux musiques savantes », dans : <cite>Musiques, arts et technologies. Pour une approche critique</cite>, sous la dir. de Roberto <span class="auteur">Barbanti</span> Paris: l’Harmattan, 2004 p. 297. Le <abbr>GRM</abbr>, créé en 1958, est le centre de recherche musical dans le domaine du son et de l’électroacoustique au service de la recherche de radio-télévision française <abbr>ORTF</abbr>, INA.  </li>
        <li> <a epub:type="footnote" href="#ref_8" id="note_8">[8]</a> Œuvre de Pierre Boulez (1981-1982-1984) avec comme sujet le <a href="http://brahms.ircam.fr/works/work/6997">dialogue entre jeu individuel et jeu collectif</a> avec comme formation 6 instruments solistes, un ensemble instrumental et un système électro-acoustique pour transformer et spatialiser le son des solistes.  </li>
        <li> <a epub:type="footnote" href="#ref_9" id="note_9">[9]</a> <cite>Stereolux</cite>, (Journées du code créatif 29-30 mars 2012) – Miller Puckette précise les moments clés des avancées technologiques pour le temps réel au début de son intervention.  </li>
        <li> <a epub:type="footnote" href="#ref_10" id="note_10">[10]</a> <i lang="en" xml:lang="en" class="droit">Massachusetts Institute of Technology</i> </li>
        <li> <a epub:type="footnote" href="#ref_11" id="note_11">[11]</a> Archives IRCAM, <cite>Atelier de recherche Musicale</cite>, 14.11.1985.  </li>
        <li> <a epub:type="footnote" href="#ref_12" id="note_12">[12]</a> Archive IRCAM, <cite>Manuel Max</cite>, p. 1 </li>
        <li> <a epub:type="footnote" href="#ref_13" id="note_13">[13]</a> « <q>Miller Puckette travaille principalement à rendre le programme fiable et maniable</q> ». IRCAM Philippe Manoury, dans : <cite>Les Cahiers de l’Ircam 8</cite> 1995 p. 40.  </li>
        <li> <a epub:type="footnote" href="#ref_14" id="note_14">[14]</a> Prix de la meilleure réalisation musicale de la SACEM en 1988.  </li>
        <li> <a epub:type="footnote" href="#ref_15" id="note_15">[15]</a> <cite> Sonus ex machina</cite>, réalisé à l’IRCAM est composé de <cite>Jupiter</cite> 1987 (pour flûte), <cite>Pluton</cite> 1988, 1989 (pour piano), <cite>La Partition du Ciel et de l’Enfer</cite>, 1989 (pour orchestre) et <cite>Neptune</cite> 1991 (pour trois percussionnistes), confrontés à la machine et à ses différents modes de réaction.  </li>
        <li> <a epub:type="footnote" href="#ref_16" id="note_16">[16]</a> <cite lang="de" xml:lang="de">Zeitlauf</cite> (1982) est la première pièce de Philippe Manoury réalisée à l’IRCAM.  Agencement de chœurs mixtes, d’un ensemble instrumental, de synthétiseurs, de bandes magnétiques.  </li>
        <li> <a epub:type="footnote" href="#ref_17" id="note_17">[17]</a> Normes d’échange de données musicales numérisées.  </li>
        <li> <a epub:type="footnote" href="#ref_18" id="note_18">[18]</a> Par exemple pour cette pièce, l’artiste introduisait les propriétés des chaînes de Markov, c’est-à-dire des développements aléatoires qui ont pour conséquence des probabilités de successions d’événements. Les traits stylistiques du soliste sont toutefois maintenus. <span class="auteur">Langer</span>, Daniela, <cite>Va-et-vient. Entretiens avec Philippe Manoury</cite>, Paris: Musica Falsa, 2001 p. 111.  </li>
        <li> <a epub:type="footnote" href="#ref_19" id="note_19">[19]</a> <i lang="en" xml:lang="en" class="droit">IRCAM Signal Processing Workstation</i> Stéréolux, Conférence Miller Puckette.  </li>
        <li> <a epub:type="footnote" href="#ref_20" id="note_20">[20]</a> Ce nom a été donné en hommage à Max Mathews.  </li>
        <li> <a epub:type="footnote" href="#ref_21" id="note_21">[21]</a> Le terme <i lang="en" xml:lang="en">soft</i> provient de <i lang="en" xml:lang="en">software</i>, qui signifie logiciel en anglais.  </li>
        <li> <a epub:type="footnote" href="#ref_22" id="note_22">[22]</a> Passage d’un langage informatique à un autre langage informatique.  </li>
        <li> <a epub:type="footnote" href="#ref_23" id="note_23">[23]</a> <span class="auteur">Combes</span>, Malika, <cite>L’IRCAM fête ses 30 ans : retour sur une institution culturelle atypique dans ses rapports avec ses organismes de tutelle</cite>, <a href="http://musique.ehess.fr/docannexe.php?id=238">EHESS</a>, 2007.       </li>
        <li> <a epub:type="footnote" href="#ref_24" id="note_24">[24]</a> <i lang="en" xml:lang="en" class="droit">International Computer Music Conference (<abbr>ICMC</abbr>) Thessaloniki</i> en Grèce, capitale culturelle européenne en 1997.  </li>
        <li> <a epub:type="footnote" href="#ref_25" id="note_25">[25]</a> Présentée le 27 septembre 1997 au club de Jazz Milos à Thessaloniki.  </li>
        <li> <a epub:type="footnote" href="#ref_26" id="note_26">[26]</a> La licence <abbr>BSD</abbr> (<i lang="en" xml:lang="en" class="droit">Berkeley Software Distribution License</i>) est une licence libre utilisée pour la distribution de logiciels. Elle permet de réutiliser tout ou une partie du logiciel sans restriction, qu’il soit intégré dans un logiciel libre ou propriétaire.  </li>
        <li> <a epub:type="footnote" href="#ref_27" id="note_27">[27]</a> L’<abbr>OSI</abbr> prône la qualité des logiciels libres contre les logiciels propriétaires. Le logiciel libre est défendu comme source de bénéfices économiques. « <q lang="en" xml:lang="en">Open source is a development method for software that harnesses the power of distributed peer review and transparency of process. The promise of open source is better quality, higher reliability, more flexibility, lower cost, and an end to predatory vendor lock-in</q> ». <i>A contrario</i> la <abbr>FSF</abbr> considère le logiciel libre à partir de l’utopie éthique et sociale qu’il convoque.  </li>
        <li> <a epub:type="footnote" href="#ref_28" id="note_28">[28]</a> Rédigée par Richard Stallman et Eben Moglen, dans un premier temps.  </li>
        <li> <a epub:type="footnote" href="#ref_29" id="note_29">[29]</a> Mark Danks, Chris Clepper, Cyrille Henry, IOhannes M Zmoelnig, Guenter Geiger, Daniel Heckenberg, James Tittle, Hans-Christoph Steiner et bien d’autres ont participé à sa création.  </li>
        <li> <a epub:type="footnote" href="#ref_30" id="note_30">[30]</a> Conception d’applications générant des images 2D et 3D.  </li>
        <li> <a epub:type="footnote" href="#ref_31" id="note_31">[31]</a> « <q lang="en" xml:lang="en">[expr~] is the first music release of 0xA, consists of retro sounding tracks made almost entirely with the [expr~] object in Pure Data.  No tweaking of number boxes and sliders, no clever generative algorithms, just switch the audio on and listen. The source code for this release (implemented in Pure-data) is free software distributable under the terms of the GNU General Public License (version 3 or greater). For repository, see : <a href="http://gitorious.org/0xa">gitorious.org/0xa</a>. Copyleft : This is a free work, you can copy, distribute, and modify it under the terms of the Free Art License. Released on 3rd April 2011.</q> »<a href="http://archive.org/details/GOSUB10-004"> GOSUB10-004</a> </li>
        <li> <a epub:type="footnote" href="#ref_32" id="note_32">[32]</a> « <q>Notre souci commun était que la Licence Art Libre puisse répondre à trois conditions : qu’elle soit conforme au droit français, qu’elle soit fidèle à l’esprit du <i lang="en" xml:lang="en" class="droit">Copyleft</i> de la <i lang="en" xml:lang="en" class="droit">General Public License</i> et qu’elle corresponde à nos intentions artistiques de partage de la création nourrie de ce que nous savions d’un certain art contemporain.</q> » <span class="auteur">Moreau</span>, Antoine, « Le <i lang="en" xml:lang="en" class="droit">copyleft</i> appliqué à la création. Une reformulation des données culturelles ? Thèse de doctorat, Université de Nice Sophia Antipolis, Nice, 2001 p. 478.  </li>
        <li> <a epub:type="footnote" href="#ref_33" id="note_33">[33]</a> Rencontres Copyleft Attitude organisées par Antoine Moreau avec les artistes réunis autour de la revue <cite>Allotopie</cite>, François Deck, Antonio Gallego, Roberto Martinez et Emmanuelle Gall.  </li>
        <li> <a epub:type="footnote" href="#ref_34" id="note_34">[34]</a> Cf. <cite>Les journées du code créatif</cite> (première édition) à Nantes, <cite>Stéréolux</cite>. 29-30 mars 2012.  </li>
        <li> <a epub:type="footnote" href="#ref_35" id="note_35">[35]</a> <span class="auteur">Mayr</span>, Andrea, « <i lang="en" xml:lang="en" class="droit">Pd as Open Source Community</i> », dans : <cite lang="en" xml:lang="en">Bang, Pure Data, Berlin, Wolke Verlagsges</cite> (2004), p. 33–44.  </li>
        <li> <a epub:type="footnote" href="#ref_36" id="note_36">[36]</a> Miller Puckette est depuis 1994 le directeur associé du centre de recherche en arts et informatique de l’université de San Diego.  </li>
        <li> <a epub:type="footnote" href="#ref_37" id="note_37">[37]</a> Écrit par Ioannes Zmölnig.  </li>
        <li> <a epub:type="footnote" href="#ref_38" id="note_38">[38]</a> Voir :
        <ul>
          <li><a href="http://puredata.hurleur.com">http://puredata.hurleur.com</a></li>
          <li><a href="http://gmane.org">http://gmane.org</a></li>
          <li><a href="http://codelab.fr/pure-data">http://codelab.fr/pure-data</a></li>
          <li><a href="http://www.puredata.it/forum">http://www.puredata.it/forum</a></li>
          <li><a href="http://www.foroswebgratis.com/foro-pure\_data\_espana-77988.htm">http://www.foroswebgratis.com/foro-pure\_data\_espana-77988.htm</a></li>
          <li><a href="http://createdigitalnoise.com/categories/pd-everywhere">http://createdigitalnoise.com/categories/pd-everywhere</a></li>
        </ul>
        </li>
        <li> <a epub:type="footnote" href="#ref_39" id="note_39">[39]</a> <cite>Bang, Fribourg</cite>, Frank <span class="auteur">Zimmer</span> (éd.), 2004.  </li>
        <li> <a epub:type="footnote" href="#ref_40" id="note_40">[40]</a> <span class="auteur">Cardon</span>, Dominique, <cite>La démocratie internet. Promesses et limites</cite>, Paris : Seuil, 2010, p. 21-26.  </li>
        <li> <a epub:type="footnote" href="#ref_41" id="note_41">[41]</a> « <i lang="en" xml:lang="en" class="droit"><a href="http://umlaeute.mur.at/Members/zmoelnig/projects/sinusoiddreams">Do sinusoids dream of electric sweeps</a></i> ».  </li>
        <li> <a epub:type="footnote" href="#ref_42" id="note_42">[42]</a> TOPLAP <i lang="en" xml:lang="en"><a href="http://toplap.org/">Temporaire, transnational, terrestre, transdimensionnel</a></i> fut un collectif informel qui souhaitait que les programmes informatiques soient montrés lors de spectacle vivant ou performance, employant des systèmes informatiques.  </li>
        <li> <a epub:type="footnote" href="#ref_43" id="note_43">[43]</a> Spore a été conçu par le créateur des Sims, et développé à partir d’<i lang="en" xml:lang="en" class="droit">Open Frameworks</i>.  Cf. Kent <span class="auteur">Jolly</span>, <cite lang="en" xml:lang="en">Using Pure Data in Spore and Darkspore</cite>, Weimar : Pd-Convention, 2011.  </li>
        <li> <a epub:type="footnote" href="#ref_44" id="note_44">[44]</a> Conférence de Miller Puckette lors des <cite>Journées du code créatif</cite>, 28-29 mars 2012, <cite>Stéréolux</cite>, Nantes.  </li>
        <li> <a epub:type="footnote" href="#ref_45" id="note_45">[45]</a> <span class="auteur">Millot</span>, Laurent, <cite>Traitement du signal audio-visuel. Applications avec <i lang="en" xml:lang="en" class="droit">Pure Data</i></cite>, Paris : Dunod, 2008.       </li>
        <li> <a epub:type="footnote" href="#ref_46" id="note_46">[46]</a> Créé de 2010-2011 par Jean-Noël Montagné (artiste plasticien), Jérôme Abel (artiste développeur) et les électroniciens africains de ENDA Ecopole en partenariat avec Kër Thiossane (Sénégal) et le CRAS (France).  </li>
        <li> <a epub:type="footnote" href="#ref_47" id="note_47">[47]</a> projet réalisé de 2010 à 2011 par les associations <a href="http://lamiam.fr">ping et labomedia</a> en collaboration avec la fabrique du libre.  </li>
        <li> <a epub:type="footnote" href="#ref_48" id="note_48">[48]</a> christoph <span class="auteur">Trappe</span>, « <a href="http://www.eecs.umich.edu/nime2012/Proceedings/papers/181_Final_Manuscript.pdf"><i lang="en" xml:lang="en" class="droit">making sound synthesis accessible to children</i></a> », nime’12, may 21-23, 2012, University of Michigan, Ann Arbor.  </li>
        <li> <a epub:type="footnote" href="#ref_49" id="note_49">[49]</a> <span class="auteur">Dufrêne</span>, Bernadette, éd., <cite>Centre Pompidou, trente ans d’histoire</cite>, Paris : Centre Pompidou, 2007, p. 543.  </li>
        <li> <a epub:type="footnote" href="#ref_50" id="note_50">[50]</a> F. Déchelle écrit : « <q>jMax avait une architecture client/serveur de calcul écrit en C, nommé FTS, et une interface graphique écrite en Java/Swing. Une des caractéristiques de jMax est la portabilité supportée par Irix, Linux, Mac <abbr>OS X</abbr> et Windows.</q> » <a href="http://www.dechelle.net/?p=29">source</a>.  </li>
        <li> <a epub:type="footnote" href="#ref_51" id="note_51">[51]</a> « <q>on parle alors de Max-like. Mais l’IRCAM, faute d’utilisateurs et donc d’une communauté de développeurs, a arrêté le développement de ce dernier.</q> », <a href="http://fr.wikipedia.org/wiki/Max/MSP\#jMax">source</a>.  </li>
        <li> <a epub:type="footnote" href="#ref_52" id="note_52">[52]</a> <i>Pure Data</i> peut être un lieu d’expérimentation de l’<i lang="en" xml:lang="en" class="droit">Open<abbr>GL</abbr></i>, ce qui le distingue alors pour une activité scientifique pointue.  </li>
        <li> <a epub:type="footnote" href="#ref_53" id="note_53">[53]</a> <span class="auteur">Puckette</span>, Miller, « Étude de cas sur les logiciels pour artistes : Max/<abbr>MSP</abbr> et sur <i lang="en" xml:lang="en" class="droit">Pure Data</i> », dans : <cite>Art++</cite>, sous la dir. de David-Olivier <span class="auteur">Lartigaud</span>, Paris : Hyx, 2011, p. 182 </li>
        <li> <a epub:type="footnote" href="#ref_54" id="note_54">[54]</a>
        <cite>Stereolux</cite>, <cite>Journées du code créatif</cite> 29-30 mars 2012. Il évoque aussi que le libre permet d’éviter le <i lang="en" xml:lang="en">feature creep</i>, autrement dit l’ajout de fonctionnalités supplémentaires inutiles avec les finalités premières du logiciel ou provoquant des erreurs informatiques avec le système de base. En tant que logiciel libre, celui-ci peut être entièrement copié et développé selon la volonté du nouveau programmeur.<i>ibid.</i>, p. 188.  </li>
        <li> <a epub:type="footnote" href="#ref_55" id="note_55">[55]</a> Ces utilisations sont des signes de démocratie pour Jacques Derrida. « Nul pouvoir politique sans contrôle de l’archive, sinon de la mémoire. La démocratisation effective se mesure toujours à ce critère essentiel : la participation et l’accès à l’archive, à sa constitution et à son interprétation ». <span class="auteur">Derrida</span>, Jacques, <cite>Le mal d’archive</cite>, Paris : Editions de Minuit, 199,5, p. 15.  </li>
        <li> <a epub:type="footnote" href="#ref_56" id="note_56">[56]</a> doddés, forkés… </li>
        <li> <a epub:type="footnote" href="#ref_57" id="note_57">[57]</a><span class="auteur"> Laforêt</span>, Anne, <cite>Le net art au musée</cite>, Paris : Vrin, 2011, p. 161.  </li>
      </ol>
    </aside>
  </body>
</html>
